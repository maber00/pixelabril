---
// Corregimos las rutas de importación
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import LightboxModal from '../../components/LightboxModal.astro';

// Definimos cuáles son los IDs de estudio válidos para las rutas
export function getStaticPaths() {
  return [
    { params: { id: 'jade' } },
    { params: { id: 'zian' } },
    { params: { id: 'indigo' } },
    { params: { id: 'ambar' } }
  ];
}

// Extraemos el parámetro de la URL
const { id } = Astro.params;

// Definición de tipos para tener tipos correctos
interface Estudio {
  id: string;
  nombre: string;
  color: string;
  imagen: string;
  descripcion: string;
  metros: string;
  precio: string;
  galeria: string[];
  caracteristicas: string[];
  incluye: string[];
}

// Definimos un tipo con índice para permitir acceso usando string como índice
interface EstudiosRecord {
  [key: string]: Estudio;
}

// Un solo objeto unificado con toda la información
const estudiosCompletos: EstudiosRecord = {
  'jade': {
    id: 'jade',
    nombre: 'Estudio Jade',
    color: 'bg-green-500',
    imagen: '/images/estudios/jade/pixel-jade-room-004.webp',
    descripcion: 'Espacio luminoso con toques de verde que evocan naturaleza y tranquilidad. Diseñado para quienes buscan un ambiente sereno que promueve la concentración y el bienestar. Con ventanas amplias que maximizan la luz natural y vistas despejadas.',
    metros: '28m²',
    precio: 'Desde $1.800.000',
    galeria: [
      '/images/estudios/jade/pixel-jade-room-005.webp',
      '/images/estudios/jade/pixel-jade-room-001.webp',  
      '/images/estudios/jade/pixel-jade-room-002.webp',   
      '/images/estudios/jade/pixel-jade-room-006.webp',
      '/images/estudios/jade/pixel-jade-room-007.webp',
      '/images/estudios/jade/pixel-jade-room-008.webp'
    ],
    caracteristicas: [
      'Cama doble con colchón ortopédico',
      'Escritorio amplio con silla ergonómica',
      'Kitchenette equipada',
      'Baño privado con ducha',
      'Armario empotrado',
      'Iluminación LED regulable'
    ],
    incluye: [
      'Wifi de alta velocidad',
      'Servicios básicos (agua, luz, gas)',
      'Limpieza quincenal',
      'Acceso a zonas comunes',
      'Smart TV con Netflix',
      'Ropa de cama y toallas'
    ]
  },
  'zian': {
    id: 'zian',
    nombre: 'Estudio Zian',
    color: 'bg-blue-500',
    imagen: '/images/estudios/zian/pixel-zian-room-008.webp',
    descripcion: 'Colores azules que transmiten calma y concentración, ideal para trabajo remoto. Este espacio ha sido diseñado pensando en profesionales que necesitan un ambiente inspirador y funcional para combinar vida y trabajo con estilo.',
    metros: '32m²',
    precio: 'Desde $2.100.000',
    galeria: [
     '/images/estudios/zian/pixel-zian-room-001.webp', 
      '/images/estudios/zian/pixel-zian-room-002.webp', 
      '/images/estudios/zian/pixel-zian-room-003.webp', 
      '/images/estudios/zian/pixel-zian-room-004.webp', 
      '/images/estudios/zian/pixel-zian-room-005.webp',
      '/images/estudios/zian/pixel-zian-room-006.webp', 
      '/images/estudios/zian/pixel-zian-room-007.webp', 
      '/images/estudios/zian/pixel-zian-room-009.webp', 
      '/images/estudios/zian/pixel-zian-room-010.webp' 
    ],
    caracteristicas: [
      'Cama doble premium con almacenamiento',
      'Estación de trabajo completa',
      'Cocina equipada con microondas',
      'Baño con ducha de lluvia',
      'Closet con organización modular',
      'Sistema de sonido bluetooth'
    ],
    incluye: [
      'Wifi de alta velocidad (200 Mbps)',
      'Servicios básicos premium',
      'Limpieza semanal',
      'Acceso completo a coworking',
      'Smart TV 43" con apps de streaming',
      'Amenities premium de baño'
    ]
  },
  'indigo': {
    id: 'indigo',
    nombre: 'Estudio Índigo',
    color: 'bg-indigo-500',
    imagen: '/images/estudios/indigo/pixel-indigo-room-005.webp',
    descripcion: 'Tonos violetas que inspiran creatividad y reflexión en un ambiente acogedor. Nuestro estudio más amplio, perfecto para estadías de larga duración o para quienes desean un espacio con zona de estar separada del área de descanso.',
    metros: '35m²',
    precio: 'Desde $2.300.000',
    galeria: [
      '/images/estudios/indigo/pixel-indigo-room-001.webp', 
      '/images/estudios/indigo/pixel-indigo-room-002.webp', 
      '/images/estudios/indigo/pixel-indigo-room-003.webp', 
      '/images/estudios/indigo/pixel-indigo-room-004.webp', 
      '/images/estudios/indigo/pixel-indigo-room-006.webp',
      '/images/estudios/indigo/pixel-indigo-room-007.webp', 
      '/images/estudios/indigo/pixel-indigo-room-008.webp', 
      '/images/estudios/indigo/pixel-indigo-room-009.webp', 
      '/images/estudios/indigo/pixel-indigo-room-010.webp',
      '/images/estudios/indigo/pixel-indigo-room-011.webp', 
      '/images/estudios/indigo/pixel-indigo-room-012.webp', 
      '/images/estudios/indigo/pixel-indigo-room-013.webp', 
      '/images/estudios/indigo/pixel-indigo-room-014.webp', 
      '/images/estudios/indigo/pixel-indigo-room-016.webp', 
      '/images/estudios/indigo/pixel-indigo-room-017.webp', 
      '/images/estudios/indigo/pixel-indigo-room-018.webp' 
    ],
    caracteristicas: [
      'Cama queen con colchón premium',
      'Área de trabajo separada',
      'Cocina completa con barra desayunador',
      'Baño completo con amenities',
      'Walk-in closet',
      'Zona de estar con sofá'
    ],
    incluye: [
      'Wifi dedicado de alta velocidad',
      'Servicios básicos premium',
      'Limpieza semanal con cambio de sábanas',
      'Acceso premium a todas las áreas comunes',
      'Smart TV 50" con todas las plataformas',
      'Caja de seguridad digital'
    ]
  },
  
};

// Redirección si el estudio no existe
if (!id || !estudiosCompletos[id as keyof typeof estudiosCompletos]) {
  return Astro.redirect('/404');
}

// Obtener el estudio seleccionado
const estudio = estudiosCompletos[id as keyof typeof estudiosCompletos];

// Clases dinámicas basadas en el color del estudio
interface ColorClasses {
  bg: string;
  text: string;
  border: string;
  hover: string;
  light: string;
  lightText: string;
}

const colorClasses: Record<string, ColorClasses> = {
  'jade': {
    bg: 'bg-green-500',
    text: 'text-green-500',
    border: 'border-green-500',
    hover: 'hover:bg-green-600',
    light: 'bg-green-100',
    lightText: 'text-green-700'
  },
  'zian': {
    bg: 'bg-blue-500',
    text: 'text-blue-500',
    border: 'border-blue-500',
    hover: 'hover:bg-blue-600',
    light: 'bg-blue-100',
    lightText: 'text-blue-700'
  },
  'indigo': {
    bg: 'bg-indigo-500',
    text: 'text-indigo-500',
    border: 'border-indigo-500',
    hover: 'hover:bg-indigo-600',
    light: 'bg-indigo-100',
    lightText: 'text-indigo-700'
  },
  'ambar': {
    bg: 'bg-amber-500',
    text: 'text-amber-500',
    border: 'border-amber-500',
    hover: 'hover:bg-amber-600',
    light: 'bg-amber-100',
    lightText: 'text-amber-700'
  }
};

const colors = colorClasses[estudio.id as keyof typeof colorClasses];

// Preparar datos para el lightbox
interface LightboxEstudio {
  nombre: string;
  imagenPrincipal: string;
  imagenes: string[];
  color: string;
}

interface LightboxData {
  [key: string]: LightboxEstudio;
}

const lightboxData: LightboxData = {
  [estudio.id]: {
    nombre: estudio.nombre,
    imagenPrincipal: estudio.imagen,
    imagenes: estudio.galeria,
    color: colors.bg
  }
};
---

<Layout title={`${estudio.nombre} - Pixel Living | Coliving en Bogotá`}>
    <main>
      <section class="pt-32 pb-16">
        <div class="container">
          <!-- Navegación de migas de pan -->
          <div class="flex items-center mb-6 text-sm">
            <a href="/" class="text-gray-500 hover:text-gray-700">Inicio</a>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mx-2 text-gray-400">
              <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
            </svg>
            <a href="/#espacios" class="text-gray-500 hover:text-gray-700">Espacios</a>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mx-2 text-gray-400">
              <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
            </svg>
            <span class={`font-medium ${colors.text}`}>{estudio.nombre}</span>
          </div>
          
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
            <!-- Galería de imágenes -->
            <div>
              <div class="relative overflow-hidden rounded-xl border-2 border-gray-200 mb-4 aspect-video">
                <img 
                  id="mainImage"
                  src={estudio.imagen} 
                  alt={estudio.nombre} 
                  class="w-full h-full object-cover cursor-pointer main-image"
                  data-estudio-id={estudio.id}
                />
                <div class={`absolute top-4 right-4 ${colors.bg} py-1 px-3 rounded-md shadow-md text-white font-medium`}>
                  {estudio.metros}
                </div>
              </div>
              
              <!-- Miniaturas -->
              <div class="grid grid-cols-5 gap-2">
                <div class={`cursor-pointer rounded-md overflow-hidden border-2 ${colors.border} thumbnail-container gallery-thumb`} data-index={-1} data-estudio-id={estudio.id} data-img-index={-1}>
                  <img 
                    src={estudio.imagen} 
                    alt={`${estudio.nombre} - Imagen principal`} 
                    class="w-full h-20 object-cover thumbnail"
                    data-img-src={estudio.imagen}
                    data-index={-1}
                  />
                </div>
                
                {estudio.galeria.slice(0, 4).map((img: string, imgIndex: number) => (
                  <div class={`cursor-pointer rounded-md overflow-hidden border-2 border-gray-200 thumbnail-container gallery-thumb`} data-index={imgIndex} data-estudio-id={estudio.id} data-img-index={imgIndex}>
                    <img 
                      src={img} 
                      alt={`${estudio.nombre} - Imagen ${imgIndex + 1}`} 
                      class="w-full h-20 object-cover thumbnail"
                      data-img-src={img}
                      data-index={imgIndex}
                    />
                  </div>
                ))}
              </div>
              
              <!-- Botón para ver todas las fotos -->
              <button 
                class="w-full mt-4 py-2 bg-gray-800 text-white rounded-md flex items-center justify-center group open-gallery-btn"
                id="openGalleryBtn"
                data-estudio-id={estudio.id}
              >
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
                </svg>
                Ver todas las fotos
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 ml-1 transform transition-transform group-hover:translate-x-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
                </svg>
              </button>
            </div>
            
            <!-- Información del estudio -->
            <div>
              <h1 class="text-4xl font-bold mb-2 cal-sans">
                <span class={colors.text}>{estudio.nombre}</span>
              </h1>
              <p class="text-2xl mb-6 font-light">{estudio.precio}</p>
              
              <div class="mb-8">
                <h2 class="text-xl font-semibold mb-3">Descripción</h2>
                <p class="text-gray-700 leading-relaxed">{estudio.descripcion}</p>
              </div>
              
              <div class="mb-8">
                <h2 class="text-xl font-semibold mb-3">Características</h2>
                <ul class="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {estudio.caracteristicas.map((item: string) => (
                    <li class="flex items-start">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class={`w-5 h-5 ${colors.text} mr-2 flex-shrink-0 mt-0.5`}>
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      <span>{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
              
              <div class="mb-8">
                <h2 class="text-xl font-semibold mb-3">Incluye</h2>
                <ul class="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {estudio.incluye.map((item: string) => (
                    <li class="flex items-start">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class={`w-5 h-5 ${colors.text} mr-2 flex-shrink-0 mt-0.5`}>
                        <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
                      </svg>
                      <span>{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
          
              <div class="bg-gray-100 p-6 rounded-lg">
                <h2 class="text-xl font-semibold mb-4">¿Te interesa este espacio?</h2>
                <div class="flex flex-col sm:flex-row gap-4">
                  <a 
                    href="#reserva-section" 
                    class={`flex-1 py-3 px-6 ${colors.bg} ${colors.hover} text-white rounded-md flex items-center justify-center`}
                  >
                    Reservar ahora
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 ml-2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
                    </svg>
                  </a>
                  
                  <a 
                    href={`https://wa.me/573017872595?text=${encodeURIComponent(`Hola, estoy interesado en el ${estudio.nombre}. ¿Está disponible? Gracias.`)}`}
                    target="_blank" 
                    class="flex-1 py-3 px-6 bg-green-500 hover:bg-green-600 text-white rounded-md flex items-center justify-center"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-5 h-5 mr-2" viewBox="0 0 16 16">
                      <path d="M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z"/>
                    </svg>
                    Consultar por WhatsApp
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Sección de reserva CON FORMULARIO SIMPLIFICADO Y FUNCIONAL -->
      <section id="reserva-section" class={`${colors.light} py-16`}>
        <div class="container">
          <h2 class={`text-3xl font-bold mb-8 text-center ${colors.lightText}`}>Reserva tu {estudio.nombre}</h2>
          
          <div class="max-w-3xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden">
            
            <!-- Contenedor para mensajes dinámicos -->
            <div id="message-container" class="hidden"></div>
            
            <form id="estudioReservaForm" class="p-8">
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label for="nombre" class="block text-sm font-medium text-gray-700 mb-1">
                    Nombre completo *
                  </label>
                  <input 
                    type="text" 
                    id="nombre" 
                    name="nombre" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="Ej: María García"
                    autocomplete="name"
                    required
                  >
                  <div id="nombre-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
                    Correo electrónico *
                  </label>
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="Ej: maria@gmail.com"
                    autocomplete="email"
                    required
                  >
                  <div id="email-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label for="telefono" class="block text-sm font-medium text-gray-700 mb-1">
                    Teléfono *
                  </label>
                  <input 
                    type="tel" 
                    id="telefono" 
                    name="telefono" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="Ej: 3001234567"
                    autocomplete="tel"
                    required
                  >
                  <div id="telefono-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="fecha" class="block text-sm font-medium text-gray-700 mb-1">Fecha de ingreso estimada</label>
                  <input 
                    type="date" 
                    id="fecha" 
                    name="fecha" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                  <div id="fecha-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                  <label for="estadia" class="block text-sm font-medium text-gray-700 mb-1">Tiempo estimado de estadía</label>
                  <select 
                    id="estadia" 
                    name="estadia" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                    <option value="">Selecciona una opción</option>
                    <option value="1-3 meses">1-3 meses</option>
                    <option value="3-6 meses">3-6 meses</option>
                    <option value="6-12 meses">6-12 meses</option>
                    <option value="Más de 1 año">Más de 1 año</option>
                  </select>
                  <div id="estadia-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="personas" class="block text-sm font-medium text-gray-700 mb-1">Número de personas</label>
                  <select 
                    id="personas" 
                    name="personas" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                    <option value="1">1 persona</option>
                    <option value="2">2 personas</option>
                  </select>
                  <div id="personas-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>
              
              <div class="mb-6">
                <label for="expectativas" class="block text-sm font-medium text-gray-700 mb-1">
                  ¿Qué buscas en tu experiencia en Pixel? *
                </label>
                <textarea 
                  id="expectativas" 
                  name="expectativas" 
                  rows="3" 
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                  placeholder={`Cuéntanos por qué te interesa el ${estudio.nombre}...`}
                  required
                ></textarea>
                <div id="contador-caracteres" class="mt-1 text-xs text-gray-500">0/500 caracteres</div>
                <div id="expectativas-error" class="hidden text-red-600 text-sm mt-1"></div>
              </div>
              
              <button 
                type="submit" 
                class={`w-full btn ${colors.bg} ${colors.hover} text-white py-3 rounded-md font-medium transition-all duration-300`}
              >
                👉 Solicita tu {estudio.nombre} ahora
              </button>
              
              <p class="text-center text-sm text-gray-500 mt-4">
                Al enviar esta solicitud, aceptas nuestra política de privacidad y términos de servicio.
              </p>
            </form>
          </div>
        </div>
      </section>

      <!-- Otros estudios -->
      <section class="py-16">
        <div class="container">
          <h2 class="text-3xl font-bold mb-8 text-center">Explora otros espacios</h2>
          
          <div class="grid grid-cols-1 sm:grid-cols-2 px-0 lg:px-40 gap-6">
            {Object.values(estudiosCompletos)
              .filter(e => e.id !== estudio.id)
              .slice(0, 3)
              .map((e: Estudio) => (
                <div class="bg-white rounded-md overflow-hidden shadow-lg border-2 border-gray-200 transform transition duration-300 hover:-translate-y-2 hover:shadow-xl">
                  <div class="relative">
                    <img src={e.imagen} alt={e.nombre} class="w-full h-48 object-cover" />
                    <div class={`absolute top-4 right-4 bg-white py-1 px-3 rounded-md shadow-md border ${colorClasses[e.id as keyof typeof colorClasses].border}`}>
                      <span class="font-medium text-sm">{e.metros}</span>
                    </div>
                  </div>
                  
                  <div class="p-4">
                    <h3 class={`text-xl font-bold mb-2 ${colorClasses[e.id as keyof typeof colorClasses].text}`}>{e.nombre}</h3>
                    <p class="text-gray-600 mb-3 line-clamp-2">{e.descripcion}</p>
                    
                    <div class="flex justify-between items-center">
                      <span class={`text-lg font-bold ${colorClasses[e.id as keyof typeof colorClasses].text}`}>{e.precio}</span>
                      <a href={`/estudio/${e.id}`} class={`${colorClasses[e.id as keyof typeof colorClasses].text} font-medium inline-flex items-center group`}>
                        Ver detalles
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 ml-1 transform transition-transform group-hover:translate-x-1">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
                        </svg>
                      </a>
                    </div>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </section>
    </main>

    <!-- Usar el componente de lightbox responsivo -->
    <LightboxModal id="estudio-lightbox" showDetailsButton={false} showReservaButton={true} reservaPath="#reserva-section" />
</Layout>

<!-- CARGAR EL LIGHTBOX RESPONSIVO PRIMERO -->
<script is:inline>
// SCRIPT RESPONSIVO INTEGRADO DIRECTAMENTE
// Hacer disponible globalmente el lightboxData antes de cualquier script
window.lightboxData = undefined; // Se define más abajo
</script>

<!-- Script del formulario y lightbox -->
<script define:vars={{ lightboxData, estudioId: estudio.id, estudioNombre: estudio.nombre }}>
document.addEventListener('DOMContentLoaded', () => {
    console.log('🚀 Inicializando página de estudio:', estudioNombre);
    
    // ===== HACER LIGHTBOX DATA DISPONIBLE GLOBALMENTE =====
    window.lightboxData = lightboxData || {};
    
    // ===== CONFIGURACIÓN RESPONSIVA =====
    const getThumbnailsPerView = () => {
        const width = window.innerWidth;
        if (width < 641) return 5;        // Móvil: 5 thumbnails
        if (width < 1025) return 6;       // Tablet: 6 thumbnails  
        return 8;                         // Desktop: 8 thumbnails
    };
    
    // ===== CLASE LIGHTBOX RESPONSIVO INTEGRADA =====
    class ResponsiveLightbox {
        constructor(modalId, lightboxData) {
            this.modalId = modalId;
            this.lightboxData = lightboxData || {};
            this.currentEstudioId = '';
            this.currentImageIndex = 0;
            this.currentImages = [];
            this.thumbCarouselIndex = 0;
            this.thumbnailsPerView = getThumbnailsPerView();
            
            this.initializeElements();
            this.bindEvents();
        }
        
        initializeElements() {
            this.modal = document.getElementById(this.modalId);
            if (!this.modal) {
                console.error(`❌ Modal ${this.modalId} no encontrado`);
                return;
            }
            
            // Elementos principales
            this.image = this.modal.querySelector('.lightbox-image');
            this.title = this.modal.querySelector('.lightbox-title');
            this.closeBtn = this.modal.querySelector('.lightbox-close');
            this.prevBtn = this.modal.querySelector('.lightbox-prev');
            this.nextBtn = this.modal.querySelector('.lightbox-next');
            this.detailsLink = this.modal.querySelector('.lightbox-details-link');
            this.reservaLink = this.modal.querySelector('.lightbox-reserva-link');
            this.currentSpan = this.modal.querySelector('.lightbox-current');
            this.totalSpan = this.modal.querySelector('.lightbox-total');
            
            // Elementos del carrusel de thumbnails
            this.thumbCarousel = this.modal.querySelector('.lightbox-thumbnails-carousel');
            this.thumbPrevBtn = this.modal.querySelector('.thumb-carousel-prev');
            this.thumbNextBtn = this.modal.querySelector('.thumb-carousel-next');
            
            console.log('✅ Elementos del lightbox inicializados');
        }
        
        bindEvents() {
            if (!this.modal) return;
            
            // Cerrar modal
            this.closeBtn?.addEventListener('click', () => this.close());
            
            // Navegación principal
            this.prevBtn?.addEventListener('click', () => this.navigateImage(-1));
            this.nextBtn?.addEventListener('click', () => this.navigateImage(1));
            
            // Navegación del carrusel de thumbnails
            this.thumbPrevBtn?.addEventListener('click', () => this.navigateThumbnailCarousel(-1));
            this.thumbNextBtn?.addEventListener('click', () => this.navigateThumbnailCarousel(1));
            
            // Click fuera del modal
            this.modal.addEventListener('click', (e) => {
                if (e.target === this.modal) this.close();
            });
            
            // Teclado
            document.addEventListener('keydown', (e) => this.handleKeyboard(e));
            
            // Responsive
            window.addEventListener('resize', () => this.handleResize());
            
            // Botón reserva
            this.reservaLink?.addEventListener('click', (e) => {
                e.preventDefault();
                this.close();
                setTimeout(() => this.scrollToReservas(), 200);
            });
        }
        
        // ===== FUNCIONES PRINCIPALES =====
        
        open(estudioId, imageIndex = 0) {
            console.log('🎯 Abriendo lightbox:', { estudioId, imageIndex });
            
            const estudioData = this.lightboxData[estudioId];
            if (!estudioData) {
                console.error('❌ Estudio no encontrado:', estudioId);
                return;
            }
            
            this.currentEstudioId = estudioId;
            this.currentImages = this.buildImageArray(estudioData);
            this.currentImageIndex = Math.max(0, Math.min(imageIndex, this.currentImages.length - 1));
            this.thumbCarouselIndex = 0;
            
            // Actualizar título
            if (this.title) this.title.textContent = estudioData.nombre;
            
            // Actualizar enlaces
            if (this.detailsLink) this.detailsLink.href = `/estudio/${estudioId}`;
            if (this.reservaLink) this.reservaLink.href = '#reserva-section';
            
            // Construir thumbnails
            this.buildThumbnails();
            
            // Actualizar imagen y mostrar modal
            this.updateImage();
            this.show();
            
            console.log('✅ Lightbox abierto con', this.currentImages.length, 'imágenes');
        }
        
        close() {
            this.modal?.classList.add('hidden');
            this.modal?.classList.remove('flex');
            document.body.style.overflow = '';
            console.log('🚪 Lightbox cerrado');
        }
        
        show() {
            this.modal?.classList.remove('hidden');
            this.modal?.classList.add('flex');
            document.body.style.overflow = 'hidden';
            
            // Focus en el botón cerrar
            setTimeout(() => this.closeBtn?.focus(), 100);
        }
        
        navigateImage(direction) {
            if (this.currentImages.length === 0) return;
            
            this.currentImageIndex = (this.currentImageIndex + direction + this.currentImages.length) % this.currentImages.length;
            this.updateImage();
            this.ensureThumbnailVisible();
        }
        
        navigateThumbnailCarousel(direction) {
            const maxIndex = Math.max(0, this.currentImages.length - this.thumbnailsPerView);
            
            if (direction === -1) {
                this.thumbCarouselIndex = Math.max(0, this.thumbCarouselIndex - 1);
            } else {
                this.thumbCarouselIndex = Math.min(maxIndex, this.thumbCarouselIndex + 1);
            }
            
            this.updateThumbnailCarousel();
        }
        
        // ===== FUNCIONES DE CONSTRUCCIÓN =====
        
        buildImageArray(estudioData) {
            const images = [];
            
            // Imagen principal
            if (estudioData.imagenPrincipal) {
                images.push({
                    src: estudioData.imagenPrincipal,
                    alt: `${estudioData.nombre} - Imagen principal`
                });
            }
            
            // Galería adicional
            if (estudioData.imagenes && Array.isArray(estudioData.imagenes)) {
                estudioData.imagenes.forEach((src, index) => {
                    images.push({
                        src: src,
                        alt: `${estudioData.nombre} - Imagen ${index + 1}`
                    });
                });
            }
            
            return images;
        }
        
        buildThumbnails() {
            if (!this.thumbCarousel) return;
            
            this.thumbCarousel.innerHTML = '';
            
            this.currentImages.forEach((image, index) => {
                const thumb = document.createElement('button');
                thumb.className = `lightbox-thumbnail mr-2 last:mr-0 rounded-md overflow-hidden border-2 border-transparent hover:border-white focus:border-yellow-400 transition-all duration-200`;
                thumb.setAttribute('aria-label', `Ver ${image.alt}`);
                thumb.setAttribute('data-index', index.toString());
                
                thumb.innerHTML = `
                    <img 
                        src="${image.src}" 
                        alt="" 
                        class="w-full h-full object-cover"
                        loading="lazy"
                    />
                `;
                
                thumb.addEventListener('click', () => {
                    this.currentImageIndex = index;
                    this.updateImage();
                });
                
                this.thumbCarousel.appendChild(thumb);
            });
            
            // Actualizar responsive
            this.updateThumbnailSizes();
            this.updateThumbnailCarousel();
        }
        
        updateThumbnailSizes() {
            if (!this.thumbCarousel) return;
            
            const thumbnails = this.thumbCarousel.querySelectorAll('.lightbox-thumbnail');
            const gap = 0.5; // rem
            const totalGaps = (this.thumbnailsPerView - 1) * gap;
            const thumbnailWidth = `calc((100% - ${totalGaps}rem) / ${this.thumbnailsPerView})`;
            
            thumbnails.forEach(thumb => {
                thumb.style.width = thumbnailWidth;
                thumb.style.aspectRatio = '1';
                thumb.style.flexShrink = '0';
            });
        }
        
        // ===== FUNCIONES DE ACTUALIZACIÓN =====
        
        updateImage() {
            if (!this.image || this.currentImages.length === 0) return;
            
            const currentImage = this.currentImages[this.currentImageIndex];
            
            // Transición suave
            this.image.style.opacity = '0.7';
            
            setTimeout(() => {
                this.image.src = currentImage.src;
                this.image.alt = currentImage.alt;
                this.image.style.opacity = '1';
            }, 150);
            
            // Actualizar contador
            if (this.currentSpan) this.currentSpan.textContent = (this.currentImageIndex + 1).toString();
            if (this.totalSpan) this.totalSpan.textContent = this.currentImages.length.toString();
            
            // Actualizar botones de navegación
            this.updateNavigationButtons();
            
            // Actualizar thumbnails activas
            this.updateActiveThumbnail();
        }
        
        updateNavigationButtons() {
            if (this.prevBtn) {
                this.prevBtn.disabled = this.currentImageIndex === 0;
                this.prevBtn.style.opacity = this.currentImageIndex === 0 ? '0.5' : '1';
            }
            
            if (this.nextBtn) {
                this.nextBtn.disabled = this.currentImageIndex === this.currentImages.length - 1;
                this.nextBtn.style.opacity = this.currentImageIndex === this.currentImages.length - 1 ? '0.5' : '1';
            }
        }
        
        updateActiveThumbnail() {
            if (!this.thumbCarousel) return;
            
            const thumbnails = this.thumbCarousel.querySelectorAll('.lightbox-thumbnail');
            thumbnails.forEach((thumb, index) => {
                const isActive = index === this.currentImageIndex;
                thumb.style.opacity = isActive ? '1' : '0.7';
                thumb.style.borderColor = isActive ? '#ffffff' : 'transparent';
            });
        }
        
        updateThumbnailCarousel() {
            if (!this.thumbCarousel) return;
            
            const translateX = -(this.thumbCarouselIndex * (100 / this.thumbnailsPerView));
            this.thumbCarousel.style.transform = `translateX(${translateX}%)`;
            
            // Actualizar botones del carrusel
            this.updateThumbnailCarouselButtons();
        }
        
        updateThumbnailCarouselButtons() {
            const maxIndex = Math.max(0, this.currentImages.length - this.thumbnailsPerView);
            
            if (this.thumbPrevBtn) {
                this.thumbPrevBtn.style.opacity = this.thumbCarouselIndex === 0 ? '0.5' : '1';
                this.thumbPrevBtn.disabled = this.thumbCarouselIndex === 0;
            }
            
            if (this.thumbNextBtn) {
                this.thumbNextBtn.style.opacity = this.thumbCarouselIndex >= maxIndex ? '0.5' : '1';
                this.thumbNextBtn.disabled = this.thumbCarouselIndex >= maxIndex;
            }
        }
        
        ensureThumbnailVisible() {
            const currentThumbIndex = this.currentImageIndex;
            const visibleStart = this.thumbCarouselIndex;
            const visibleEnd = this.thumbCarouselIndex + this.thumbnailsPerView - 1;
            
            if (currentThumbIndex < visibleStart) {
                this.thumbCarouselIndex = currentThumbIndex;
                this.updateThumbnailCarousel();
            } else if (currentThumbIndex > visibleEnd) {
                this.thumbCarouselIndex = Math.max(0, currentThumbIndex - this.thumbnailsPerView + 1);
                this.updateThumbnailCarousel();
            }
        }
        
        // ===== EVENTOS =====
        
        handleKeyboard(e) {
            if (this.modal?.classList.contains('hidden')) return;
            
            switch (e.key) {
                case 'Escape':
                    this.close();
                    break;
                case 'ArrowLeft':
                    this.navigateImage(-1);
                    break;
                case 'ArrowRight':
                    this.navigateImage(1);
                    break;
            }
        }
        
        handleResize() {
            const newThumbnailsPerView = getThumbnailsPerView();
            if (newThumbnailsPerView !== this.thumbnailsPerView) {
                this.thumbnailsPerView = newThumbnailsPerView;
                this.updateThumbnailSizes();
                this.thumbCarouselIndex = 0; // Reset position
                this.updateThumbnailCarousel();
            }
        }
        
        scrollToReservas() {
            const reservasSection = document.querySelector('#reserva-section');
            if (reservasSection) {
                reservasSection.scrollIntoView({ 
                    behavior: 'smooth',
                    block: 'start'
                });
                console.log('⬇️ Scroll a reservas completado');
            }
        }
    }
    
    // ===== INICIALIZAR LIGHTBOX =====
    const lightboxInstance = new ResponsiveLightbox('estudio-lightbox', window.lightboxData);
    
    // Función global para abrir lightbox
    window.openLightbox = function(estudioId, imageIndex = 0) {
        lightboxInstance.open(estudioId, imageIndex);
    };
    
    // ===== CONFIGURACIÓN DE LA GALERÍA PRINCIPAL =====
    const mainImage = document.getElementById('mainImage');
    const thumbnailContainers = document.querySelectorAll('.thumbnail-container');
    const openGalleryBtn = document.getElementById('openGalleryBtn');

    // Cambiar imagen principal al hacer clic en miniatura
    thumbnailContainers.forEach(container => {
        container.addEventListener('click', () => {
            const thumbImg = container.querySelector('.thumbnail');
            if (mainImage && thumbImg) {
                const imgSrc = thumbImg.getAttribute('data-img-src');
                if (imgSrc) {
                    mainImage.src = imgSrc;
                }
                
                // Actualizar estilos de miniaturas
                thumbnailContainers.forEach(c => {
                    c.classList.remove('border-green-500', 'border-blue-500', 'border-indigo-500', 'border-amber-500');
                    c.classList.add('border-gray-200');
                });
                
                // Aplicar estilo activo según el estudio
                container.classList.remove('border-gray-200');
                const colorMap = {
                    'jade': 'border-green-500',
                    'zian': 'border-blue-500', 
                    'indigo': 'border-indigo-500',
                    'ambar': 'border-amber-500'
                };
                container.classList.add(colorMap[estudioId] || 'border-green-500');
            }
        });
    });

    // ===== EVENTOS PARA ABRIR LIGHTBOX =====
    
    // Botón "Ver todas las fotos"
    if (openGalleryBtn) {
        openGalleryBtn.addEventListener('click', () => {
            console.log('🎯 Abriendo galería completa para:', estudioNombre);
            window.openLightbox(estudioId, 0);
        });
    }

    // Imagen principal clickeable
    if (mainImage) {
        mainImage.addEventListener('click', () => {
            console.log('🎯 Abriendo lightbox desde imagen principal');
            window.openLightbox(estudioId, 0);
        });

        // Keyboard support
        mainImage.setAttribute('tabindex', '0');
        mainImage.setAttribute('role', 'button');
        mainImage.setAttribute('aria-label', `Ver galería completa de ${estudioNombre}`);
        
        mainImage.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                mainImage.click();
            }
        });
    }

    // Thumbnails clickeables para abrir lightbox con doble click
    thumbnailContainers.forEach((container, index) => {
        const thumb = container.querySelector('.thumbnail');
        if (thumb) {
            // Doble click para abrir lightbox
            let clickCount = 0;
            container.addEventListener('click', () => {
                clickCount++;
                setTimeout(() => {
                    if (clickCount === 2) {
                        const imgIndex = parseInt(thumb.getAttribute('data-index') || '0');
                        const lightboxIndex = imgIndex === -1 ? 0 : imgIndex + 1;
                        console.log('🎯 Abriendo lightbox desde thumbnail:', { index: imgIndex, lightboxIndex });
                        window.openLightbox(estudioId, lightboxIndex);
                    }
                    clickCount = 0;
                }, 250);
            });
        }
    });
    
    // ===== CONFIGURACIÓN DEL FORMULARIO DE RESERVAS =====
    const form = document.getElementById('estudioReservaForm');
    const messageContainer = document.getElementById('message-container');
    const contadorCaracteres = document.getElementById('contador-caracteres');
    const expectativasField = document.getElementById('expectativas');
    
    if (!form || !messageContainer) {
        console.error('❌ Elementos del formulario no encontrados');
        return;
    }
    
    // ===== FUNCIONES DE VALIDACIÓN =====
    function validarNombre(valor) {
        const nombre = valor.trim();
        if (nombre.length < 2) return 'El nombre debe tener al menos 2 caracteres';
        if (nombre.length > 50) return 'El nombre no puede exceder 50 caracteres';
        if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(nombre)) return 'Solo se permiten letras y espacios';
        return null;
    }
    
    function validarEmail(valor) {
        const email = valor.trim();
        if (!email) return 'El email es obligatorio';
        if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) return 'Ingresa un email válido (ej: juan@gmail.com)';
        return null;
    }
    
    function validarTelefono(valor) {
        const telefono = valor.trim().replace(/\s/g, '');
        if (!telefono) return 'El teléfono es obligatorio';
        if (!/^[0-9]{10}$/.test(telefono)) return 'Ingresa un teléfono válido de 10 dígitos (ej: 3001234567)';
        return null;
    }
    
    function validarTextarea(valor) {
        const texto = valor.trim();
        if (!texto) return 'Este campo es obligatorio';
        if (texto.length < 10) return 'Describe tu interés con al menos 10 caracteres';
        if (texto.length > 500) return 'Máximo 500 caracteres';
        return null;
    }
    
    function validarSelect(valor, nombre) {
        if (!valor) return `Por favor selecciona ${nombre}`;
        return null;
    }
    
    function validarFecha(valor) {
        if (!valor) return 'Por favor selecciona una fecha';
        const fecha = new Date(valor);
        const hoy = new Date();
        hoy.setHours(0, 0, 0, 0);
        if (fecha < hoy) return 'La fecha no puede ser en el pasado';
        return null;
    }
    
    // ===== FUNCIONES PARA MOSTRAR/OCULTAR ERRORES =====
    function mostrarError(campo, mensaje) {
        campo.classList.add('border-red-500', 'bg-red-50');
        campo.classList.remove('border-gray-300');
        
        const errorDiv = document.getElementById(`${campo.id}-error`);
        if (errorDiv) {
            errorDiv.textContent = mensaje;
            errorDiv.classList.remove('hidden');
        }
    }
    
    function limpiarError(campo) {
        campo.classList.remove('border-red-500', 'bg-red-50');
        campo.classList.add('border-gray-300');
        
        const errorDiv = document.getElementById(`${campo.id}-error`);
        if (errorDiv) {
            errorDiv.classList.add('hidden');
        }
    }
    
    // ===== VALIDAR CAMPO INDIVIDUAL =====
    function validarCampo(campo) {
        let error = null;
        
        switch(campo.id) {
            case 'nombre':
                error = validarNombre(campo.value);
                break;
            case 'email':
                error = validarEmail(campo.value);
                break;
            case 'telefono':
                error = validarTelefono(campo.value);
                break;
            case 'fecha':
                error = validarFecha(campo.value);
                break;
            case 'estadia':
                error = validarSelect(campo.value, 'el tiempo de estadía');
                break;
            case 'personas':
                error = validarSelect(campo.value, 'número de personas');
                break;
            case 'expectativas':
                error = validarTextarea(campo.value);
                break;
        }
        
        if (error) {
            mostrarError(campo, error);
            return false;
        } else {
            limpiarError(campo);
            return true;
        }
    }
    
    // ===== FUNCIÓN PARA MOSTRAR MENSAJES =====
    function mostrarMensaje(tipo, mensaje) {
        const iconos = {
            success: '✅',
            error: '❌',
            loading: '⏳'
        };
        
        const colores = {
            success: 'bg-green-50 border-green-300 text-green-800',
            error: 'bg-red-50 border-red-300 text-red-800',
            loading: 'bg-blue-50 border-blue-300 text-blue-800'
        };
        
        messageContainer.innerHTML = `
            <div class="border p-4 rounded-md ${colores[tipo]} flex items-center gap-2">
                <span class="text-xl">${iconos[tipo]}</span>
                <span class="font-medium">${mensaje}</span>
            </div>
        `;
        
        messageContainer.classList.remove('hidden');
        
        if (tipo === 'success') {
            setTimeout(() => {
                messageContainer.classList.add('hidden');
            }, 2000);
        }
    }
    
    // ===== CONFIGURAR VALIDACIÓN EN TIEMPO REAL =====
    const campos = form.querySelectorAll('input[required], select[required], textarea[required]');
    
    campos.forEach(campo => {
        // Validar al perder el foco
        campo.addEventListener('blur', () => {
            validarCampo(campo);
        });
        
        // Limpiar error mientras escribe
        campo.addEventListener('input', () => {
            if (campo.classList.contains('border-red-500')) {
                limpiarError(campo);
            }
        });
    });
    
    // ===== CONTADOR DE CARACTERES =====
    if (expectativasField && contadorCaracteres) {
        expectativasField.addEventListener('input', () => {
            const currentLength = expectativasField.value.length;
            const maxLength = 500;
            
            contadorCaracteres.textContent = `${currentLength}/${maxLength} caracteres`;
            
            if (currentLength > maxLength * 0.9) {
                contadorCaracteres.classList.add('text-yellow-600');
                contadorCaracteres.classList.remove('text-gray-500');
            } else if (currentLength > maxLength) {
                contadorCaracteres.classList.add('text-red-600');
                contadorCaracteres.classList.remove('text-yellow-600', 'text-gray-500');
            } else {
                contadorCaracteres.classList.add('text-gray-500');
                contadorCaracteres.classList.remove('text-yellow-600', 'text-red-600');
            }
        });
    }
    
    // ===== ENVÍO DEL FORMULARIO =====
    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        e.stopImmediatePropagation();
        
        console.log('📋 Procesando formulario de', estudioNombre);
        
        // Ocultar mensajes anteriores
        messageContainer.classList.add('hidden');
        
        // Validar todos los campos
        let todoValido = true;
        let primerError = null;
        
        campos.forEach(campo => {
            if (!validarCampo(campo)) {
                todoValido = false;
                if (!primerError) {
                    primerError = campo;
                }
            }
        });
        
        if (!todoValido) {
            mostrarMensaje('error', 'Por favor corrige los errores señalados');
            if (primerError) {
                primerError.focus();
                primerError.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
            return;
        }
        
        // Configurar botón
        const boton = form.querySelector('button[type="submit"]');
        const textoOriginal = boton.textContent;
        
        try {
            boton.textContent = 'Enviando...';
            boton.disabled = true;
            mostrarMensaje('loading', 'Procesando tu solicitud...');
            
            // Recopilar datos
            const datos = {
                nombre: form.querySelector('#nombre').value.trim(),
                email: form.querySelector('#email').value.trim(),
                telefono: form.querySelector('#telefono').value.trim(),
                fecha: form.querySelector('#fecha').value,
                estadia: form.querySelector('#estadia').value,
                personas: form.querySelector('#personas').value,
                expectativas: form.querySelector('#expectativas').value.trim()
            };
            
            console.log('📋 Datos del formulario:', datos);
            
            // Crear mensaje de WhatsApp con estudio específico
            const mensajeWhatsApp = `🏠 *SOLICITUD RESERVA PIXEL LIVING*
📍 ${estudioNombre}

👤 *DATOS PERSONALES:*
- Nombre: ${datos.nombre}
- Email: ${datos.email}
- Teléfono: ${datos.telefono}

📅 *DETALLES:*
- Fecha ingreso: ${datos.fecha || 'Por coordinar'}
- Duración: ${datos.estadia || 'Por definir'}
- Personas: ${datos.personas || '1'}

💬 *MENSAJE:*
${datos.expectativas}

---
📧 Copia enviada por email
⏰ ${new Date().toLocaleString('es-CO')}
🌐 pixelliving.co`;
            
            // Abrir WhatsApp inmediatamente
            const whatsappURL = `https://wa.me/573017872595?text=${encodeURIComponent(mensajeWhatsApp)}`;
            window.open(whatsappURL, '_blank');
            
            // Mostrar éxito
            mostrarMensaje('success', '¡Solicitud enviada! WhatsApp se abrirá automáticamente...');
            
            // Enviar email en background
            const enviarEmail = async () => {
                try {
                    const formData = new FormData();
                    formData.append('Nombre', datos.nombre);
                    formData.append('Email', datos.email);
                    formData.append('Teléfono', datos.telefono);
                    formData.append('Estudio_Solicitado', estudioNombre);
                    formData.append('Fecha_de_Ingreso', datos.fecha || 'Por coordinar');
                    formData.append('Duración_Estadía', datos.estadia || 'Por definir');
                    formData.append('Número_de_Personas', datos.personas || '1');
                    formData.append('Expectativas_y_Mensaje', datos.expectativas);
                    formData.append('_subject', `🏠 Nueva Reserva: ${estudioNombre} - ${datos.nombre}`);
                    formData.append('_template', 'table');
                    formData.append('_captcha', 'false');
                    
                    const response = await fetch('https://formsubmit.co/mbedoyarudas@gmail.com', {
                        method: 'POST',
                        body: formData
                    });
                    
                    console.log(response.ok ? '✅ Email enviado' : '⚠️ Error en email');
                } catch (error) {
                    console.error('⚠️ Error enviando email:', error);
                }
            };
            
            // Ejecutar envío de email sin esperar
            enviarEmail();
            
            // Resetear formulario después de un breve delay
            setTimeout(() => {
                form.reset();
                
                campos.forEach(campo => {
                    limpiarError(campo);
                });
                
                if (contadorCaracteres) {
                    contadorCaracteres.textContent = '0/500 caracteres';
                    contadorCaracteres.className = 'mt-1 text-xs text-gray-500';
                }
                
                console.log('✅ Proceso completado para', estudioNombre);
            }, 1000);
            
        } catch (error) {
            console.error('❌ Error:', error);
            mostrarMensaje('error', 'Error al enviar. Intenta nuevamente.');
            
            // En caso de error, abrir WhatsApp de todas formas
            const emergencyMsg = `Solicitud ${estudioNombre} - Error en formulario web. Contactar urgente.`;
            window.open(`https://wa.me/573017872595?text=${encodeURIComponent(emergencyMsg)}`, '_blank');
        } finally {
            boton.textContent = textoOriginal;
            boton.disabled = false;
        }
    });
    
    console.log('✅ Sistema configurado correctamente para:', estudioNombre);
    console.log('🖼️ Lightbox responsivo habilitado con', getThumbnailsPerView(), 'thumbnails por vista');
});
</script>

<style>
  /* Estilos para el carrusel de thumbnails en el lightbox */
  .lightbox-thumbnails-carousel {
    will-change: transform;
  }
  
  /* Asegurar que las thumbnails no se deformen */
  .lightbox-thumbnail {
    aspect-ratio: 1;
    flex-shrink: 0;
  }
  
  /* Responsive design para thumbnails del lightbox */
  @media (max-width: 640px) {
    .lightbox-thumbnail {
      width: calc((100% - 2rem) / 5); /* 5 thumbnails en móvil con gaps */
    }
  }
  
  @media (min-width: 641px) and (max-width: 1024px) {
    .lightbox-thumbnail {
      width: calc((100% - 3rem) / 6); /* 6 thumbnails en tablet */
    }
  }
  
  @media (min-width: 1025px) {
    .lightbox-thumbnail {
      width: calc((100% - 4rem) / 8); /* 8 thumbnails en desktop */
    }
  }
  
  /* Hover effects */
  @media (hover: hover) {
    .lightbox-thumbnail:hover {
      opacity: 1 !important;
      transform: scale(1.05);
    }
  }
  
  /* Focus states */
  .lightbox-thumbnail:focus {
    outline: 2px solid #ffd700;
    outline-offset: 2px;
    opacity: 1 !important;
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .lightbox-thumbnails-carousel,
    .lightbox-thumbnail {
      transition: none !important;
    }
    
    .lightbox-thumbnail:hover {
      transform: none !important;
    }
  }
</style>