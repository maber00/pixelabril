---
---

<section id="reservas" class="section bg-pixel-brown/10">
    <div class="container">
      <h2 class="section-title text-4xl md:text-6xl  text-pixel-brown">Reserva tu espacio en Pixel Living</h2>
      
      <div class="max-w-6xl mx-auto bg-gray-50 rounded-lg shadow-lg overflow-hidden">
        <div class="md:flex">
          <div class="md:w-1/2 p-8">
            <h3 class="text-2xl font-bold mb-4">Reserva tu apartaestudio en Pixel Living | Coliving Bogotá</h3>
            <div class="mb-6">
              <p class="text-lg font-semibold text-pixel-brown">
                Completa los siguientes datos para recibir atención personalizada.
              </p>
              <p class="text-green-600 font-bold text-lg">
                ¡Te responderemos en menos de 1 hora!
              </p>
            </div>
            
            <!-- Contenedor para mensajes dinámicos -->
            <div id="message-container" class="hidden mb-4"></div>
            
            <form id="reservaForm" class="space-y-6" data-bypass-intercept="true">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="nombre" class="block text-sm font-medium text-gray-700 mb-1">
                    Nombre completo *
                  </label>
                  <input 
                    type="text" 
                    id="nombre" 
                    name="nombre" 
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="Escribe tu nombre"
                    autocomplete="name"
                    required
                  >
                  <div id="nombre-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
                    Correo electrónico *
                  </label>
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="ejemplo@correo.com"
                    autocomplete="email"
                    required
                  >
                  <div id="email-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="telefono" class="block text-sm font-medium text-gray-700 mb-1">
                    Teléfono de contacto *
                  </label>
                  <input 
                    type="tel" 
                    id="telefono" 
                    name="telefono" 
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="Celular o WhatsApp"
                    autocomplete="tel"
                    required
                  >
                  <div id="telefono-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="duracion" class="block text-sm font-medium text-gray-700 mb-1">
                    ¿Cuánto tiempo deseas reservar? *
                  </label>
                  <select 
                    id="duracion" 
                    name="duracion" 
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                    <option value="">Selecciona duración y precio</option>
                    <option value="1-mes-3100000">1 mes - $3.100.000/mes</option>
                    <option value="3-meses-2950000">3 meses - $2.950.000/mes (Ahorra $150K)</option>
                    <option value="6-meses-2750000">6 meses - $2.750.000/mes (Ahorra $350K)</option>
                    <option value="12-meses-2650000">12 meses - $2.650.000/mes (Ahorra $450K)</option>
                  </select>
                  <div id="duracion-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="fecha" class="block text-sm font-medium text-gray-700 mb-1">
                    Fecha estimada de ingreso
                  </label>
                  <input 
                    type="date" 
                    id="fecha" 
                    name="fecha" 
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                  <small class="text-gray-500 text-xs">Podemos tener tu apartaestudio listo en 24-48 horas</small>
                  <div id="fecha-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="personas" class="block text-sm font-medium text-gray-700 mb-1">
                    Número de personas
                  </label>
                  <select 
                    id="personas" 
                    name="personas" 
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                    <option value="1">1 persona</option>
                    <option value="2">2 personas</option>
                  </select>
                  <div id="personas-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>

              <div>
                <label for="como_conociste" class="block text-sm font-medium text-gray-700 mb-1">
                  ¿Cómo conociste Pixel Living?
                </label>
                <select 
                  id="como_conociste" 
                  name="como_conociste" 
                  class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white"
                >
                  <option value="">Selecciona una opción</option>
                  <option value="google">Google/Búsqueda web</option>
                  <option value="instagram">Instagram</option>
                  <option value="facebook">Facebook</option>
                  <option value="linkedin">LinkedIn</option>
                  <option value="recomendacion">Recomendación de amigo/conocido</option>
                  <option value="volante">Volante/Material impreso</option>
                  <option value="otro">Otro</option>
                </select>
              </div>
              
              <div>
                <label for="mensaje" class="block text-sm font-medium text-gray-700 mb-1">
                  ¿Tienes alguna recomendación o mensaje para nosotros?
                </label>
                <textarea 
                  id="mensaje" 
                  name="mensaje" 
                  rows="3" 
                  class="w-full px-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                  placeholder="Opcional - Cuéntanos algo más..."
                ></textarea>
                <div id="contador-caracteres" class="mt-1 text-xs text-gray-500">0/500 caracteres</div>
              </div>

              <div>
                <label class="flex items-start gap-3">
                  <input 
                    type="checkbox" 
                    name="acepta_contacto" 
                    class="mt-1 w-4 h-4 text-pixel-brown focus:ring-pixel-brown border-gray-300 rounded"
                    required
                  >
                  <span class="text-sm text-gray-700">
                    Sí, acepto que Pixel Living me contacte para información sobre disponibilidad, 
                    precios y proceso de reserva. 
                    <a href="/privacidad" class="text-pixel-brown hover:underline">Ver política de privacidad</a>
                  </span>
                </label>
              </div>
              
              <button type="submit" class="w-full btn bg-pixel-brown hover:bg-brown-600 text-white py-4 px-6 rounded-md font-semibold text-lg transition-colors">
                🎯 ¡Quiero vivir en Pixel Living!
              </button>

              <p class="text-center text-sm text-gray-500">
                Cupos limitados • Solo tu documento • Todo incluido
              </p>
            </form>

            <!-- WhatsApp alternativo -->
            <div class="mt-6 text-center">
              <p class="text-sm text-gray-500 mb-3">¿Prefieres una respuesta inmediata?</p>
              <a href="https://wa.me/573195895858?text=Hola,%20estoy%20interesado%20en%20los%20apartaestudios%20de%20Pixel%20Living.%20¿Pueden%20enviarme%20información%20sobre%20disponibilidad%20y%20precios?" target="_blank" class="inline-flex items-center text-green-600 font-medium hover:underline">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-5 h-5 mr-2" viewBox="0 0 16 16">
                  <path d="M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z"/>
                </svg>
                WhatsApp directo
              </a>
            </div>
          </div>
          
          <div class="md:w-1/2 bg-pixel-brown/20 p-8 flex flex-col justify-center">
            <div class="text-center">
              <h3 class="text-2xl font-bold mb-4">¿Por qué reservar ahora?</h3>
              
              <ul class="space-y-4 text-left">
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span><strong>Sin codeudor:</strong> Solo necesitas tu documento de identificación</span>
                </li>
                
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span><strong>Todo incluido:</strong> Un solo pago mensual, sin sorpresas</span>
                </li>
                
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span><strong>Mudanza en 24-48h:</strong> Apartaestudios listos para habitar</span>
                </li>
                
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span><strong>Máxima flexibilidad:</strong> Desde 1 mes hasta el tiempo que necesites</span>
                </li>
                
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span><strong>Ubicación estratégica:</strong> Norte de Bogotá, cerca de todo</span>
                </li>
              </ul>

              <!-- Testimonial -->
              <div class="mt-8 p-4 bg-white rounded-lg shadow-sm">
                <p class="text-sm text-gray-600 italic mb-2">
                  "El proceso fue rápido, sin trámites complicados y en dos días ya estaba viviendo en Pixel."
                </p>
                <p class="text-xs text-pixel-brown font-semibold">— Residente Pixel Living</p>
              </div>

              <!-- Datos de confianza -->
              <div class="mt-6 grid grid-cols-3 gap-4 text-center">
                <div class="bg-white rounded-lg p-3 shadow-sm">
                  <div class="text-2xl font-bold text-pixel-brown">24h</div>
                  <div class="text-xs text-gray-600">Proceso de reserva</div>
                </div>
                <div class="bg-white rounded-lg p-3 shadow-sm">
                  <div class="text-2xl font-bold text-pixel-brown">29m²</div>
                  <div class="text-xs text-gray-600">+ balcón privado</div>
                </div>
                <div class="bg-white rounded-lg p-3 shadow-sm">
                  <div class="text-2xl font-bold text-pixel-brown">$720K</div>
                  <div class="text-xs text-gray-600">Ahorro/mes</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('🚀 Inicializando formulario de reservas optimizado...');
  
  const form = document.getElementById('reservaForm') as HTMLFormElement | null;
  const messageContainer = document.getElementById('message-container') as HTMLElement | null;
  const contadorCaracteres = document.getElementById('contador-caracteres') as HTMLElement | null;
  const mensajeField = document.getElementById('mensaje') as HTMLTextAreaElement | null;
  
  if (!form || !messageContainer) {
    console.error('❌ Elementos del formulario no encontrados');
    return;
  }
  
  const campos = form.querySelectorAll('input[required], select[required], textarea[required]') as NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>;
  
  // ===== INTERFACES PARA TYPE SAFETY =====
  
  interface FormData {
    nombre: string;
    email: string;
    telefono: string;
    duracion: string;
    fecha: string;
    personas: string;
    como_conociste: string;
    mensaje: string;
  }
  
  type MessageType = 'success' | 'error' | 'loading';
  
  // ===== FUNCIONES DE UTILIDAD =====
  
  function mostrarMensaje(tipo: MessageType, mensaje: string): void {
    if (!messageContainer) return;
    
    const iconos: Record<MessageType, string> = {
      success: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>`,
      error: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
      </svg>`,
      loading: `<svg class="animate-spin h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>`
    };
    
    const colores: Record<MessageType, string> = {
      success: 'bg-green-50 text-green-800 border-green-200',
      error: 'bg-red-50 text-red-800 border-red-200',
      loading: 'bg-blue-50 text-blue-800 border-blue-200'
    };
    
    messageContainer.innerHTML = `
      <div class="flex items-center gap-3 p-4 rounded-lg border ${colores[tipo]}">
        ${iconos[tipo]}
        <span>${mensaje}</span>
      </div>
    `;
    
    messageContainer.classList.remove('hidden');
    
    if (tipo === 'success') {
      setTimeout(() => {
        messageContainer.classList.add('hidden');
      }, 3000);
    }
  }
  
  // ===== VALIDACIONES =====
  
  function validarNombre(valor: string): string | null {
    const nombre = valor.trim();
    if (nombre.length < 2) return 'El nombre debe tener al menos 2 caracteres';
    if (nombre.length > 50) return 'El nombre no puede exceder 50 caracteres';
    if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(nombre)) return 'Solo se permiten letras y espacios';
    return null;
  }
  
  function validarEmail(valor: string): string | null {
    const email = valor.trim();
    if (!email) return 'El email es obligatorio';
    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) return 'Email inválido';
    return null;
  }
  
  function validarTelefono(valor: string): string | null {
    const telefono = valor.trim();
    if (!telefono) return 'El teléfono es obligatorio';
    if (!/^[0-9+\-\s()]+$/.test(telefono)) return 'Solo números y caracteres de teléfono';
    if (telefono.replace(/\D/g, '').length < 7) return 'Mínimo 7 dígitos';
    return null;
  }
  
  function validarFecha(valor: string): string | null {
    if (!valor) return 'Por favor selecciona una fecha';
    const fecha = new Date(valor);
    const hoy = new Date();
    hoy.setHours(0, 0, 0, 0);
    if (fecha < hoy) return 'La fecha no puede ser en el pasado';
    return null;
  }
  
  function validarSelect(valor: string, nombre: string): string | null {
    if (!valor) return `Por favor selecciona ${nombre}`;
    return null;
  }
  
  function mostrarError(campo: HTMLElement, mensaje: string): void {
    campo.classList.add('border-red-500');
    campo.classList.remove('border-gray-300');
    
    const errorDiv = document.getElementById(`${campo.id}-error`);
    if (errorDiv) {
      errorDiv.textContent = mensaje;
      errorDiv.classList.remove('hidden');
    }
  }
  
  function limpiarError(campo: HTMLElement): void {
    campo.classList.remove('border-red-500');
    campo.classList.add('border-gray-300');
    
    const errorDiv = document.getElementById(`${campo.id}-error`);
    if (errorDiv) {
      errorDiv.classList.add('hidden');
    }
  }
  
  function validarCampo(campo: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean {
    let error: string | null = null;
    
    switch (campo.id) {
      case 'nombre':
        error = validarNombre(campo.value);
        break;
      case 'email':
        error = validarEmail(campo.value);
        break;
      case 'telefono':
        error = validarTelefono(campo.value);
        break;
      case 'fecha':
        error = validarFecha(campo.value);
        break;
      case 'duracion':
        error = validarSelect(campo.value, 'la duración');
        break;
      case 'personas':
        error = validarSelect(campo.value, 'número de personas');
        break;
    }
    
    if (error) {
      mostrarError(campo, error);
      return false;
    } else {
      limpiarError(campo);
      return true;
    }
  }
  
  // ===== EVENTOS =====
  
  campos.forEach(campo => {
    campo.addEventListener('blur', () => {
      validarCampo(campo);
    });
    
    campo.addEventListener('input', () => {
      if (campo.classList.contains('border-red-500')) {
        limpiarError(campo);
      }
    });
  });
  
  // Contador de caracteres
  if (mensajeField && contadorCaracteres) {
    mensajeField.addEventListener('input', () => {
      const currentLength = mensajeField.value.length;
      const maxLength = 500;
      
      contadorCaracteres.textContent = `${currentLength}/${maxLength} caracteres`;
      
      if (currentLength > maxLength * 0.9) {
        contadorCaracteres.classList.add('text-yellow-600');
        contadorCaracteres.classList.remove('text-gray-500');
      } else if (currentLength > maxLength) {
        contadorCaracteres.classList.add('text-red-600');
        contadorCaracteres.classList.remove('text-yellow-600', 'text-gray-500');
      } else {
        contadorCaracteres.classList.add('text-gray-500');
        contadorCaracteres.classList.remove('text-yellow-600', 'text-red-600');
      }
    });
  }
  
  // ===== ENVÍO DEL FORMULARIO =====
  
  form.addEventListener('submit', async function(e) {
    e.preventDefault();
    e.stopImmediatePropagation();
    
    if (messageContainer) {
      messageContainer.classList.add('hidden');
    }
    
    // Validar todos los campos
    let todoValido = true;
    let primerError: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement | null = null;
    
    campos.forEach(campo => {
      if (!validarCampo(campo)) {
        todoValido = false;
        if (!primerError) {
          primerError = campo;
        }
      }
    });
    
    if (!todoValido) {
      mostrarMensaje('error', 'Por favor corrige los errores señalados');
      if (primerError) {
        // Type assertion para asegurar que tiene los métodos necesarios
        (primerError as HTMLElement).focus();
        (primerError as HTMLElement).scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
      return;
    }
    
    const boton = form.querySelector('button[type="submit"]') as HTMLButtonElement | null;
    if (!boton) {
      console.error('❌ Botón de envío no encontrado');
      return;
    }
    
    const textoOriginal = boton.textContent || '';
    
    try {
      boton.textContent = 'Enviando...';
      boton.disabled = true;
      mostrarMensaje('loading', 'Procesando tu solicitud...');
      
      // Recopilar datos con null checks
      const nombreEl = form.querySelector('#nombre') as HTMLInputElement | null;
      const emailEl = form.querySelector('#email') as HTMLInputElement | null;
      const telefonoEl = form.querySelector('#telefono') as HTMLInputElement | null;
      const duracionEl = form.querySelector('#duracion') as HTMLSelectElement | null;
      const fechaEl = form.querySelector('#fecha') as HTMLInputElement | null;
      const personasEl = form.querySelector('#personas') as HTMLSelectElement | null;
      const comoConociste = form.querySelector('#como_conociste') as HTMLSelectElement | null;
      const mensajeEl = form.querySelector('#mensaje') as HTMLTextAreaElement | null;
      
      if (!nombreEl || !emailEl || !telefonoEl || !duracionEl || !fechaEl || !personasEl || !comoConociste || !mensajeEl) {
        throw new Error('Elementos del formulario no encontrados');
      }
      
      const datos: FormData = {
        nombre: nombreEl.value.trim(),
        email: emailEl.value.trim(),
        telefono: telefonoEl.value.trim(),
        duracion: duracionEl.value,
        fecha: fechaEl.value,
        personas: personasEl.value,
        como_conociste: comoConociste.value,
        mensaje: mensajeEl.value.trim()
      };
      
      console.log('📋 Datos del formulario:', datos);
      
      // Crear mensaje de WhatsApp
      const mensajeWhatsApp = `🏠 *SOLICITUD RESERVA PIXEL LIVING*

👤 *DATOS PERSONALES:*
- Nombre: ${datos.nombre}
- Email: ${datos.email}
- Teléfono: ${datos.telefono}

📅 *DETALLES DE LA RESERVA:*
- Duración solicitada: ${datos.duracion}
- Fecha de ingreso: ${datos.fecha || 'Por coordinar'}
- Número de personas: ${datos.personas}
- Conoció Pixel por: ${datos.como_conociste || 'No especificado'}

💬 *MENSAJE ADICIONAL:*
${datos.mensaje || 'Ninguno'}

---
📧 Solicitud enviada también por email
⏰ ${new Date().toLocaleString('es-CO')}
🌐 pixelliving.co`;
      
      // Abrir WhatsApp
      const whatsappURL = `https://wa.me/573195895858?text=${encodeURIComponent(mensajeWhatsApp)}`;
      window.open(whatsappURL, '_blank');
      
      // Mostrar éxito y redirigir
      mostrarMensaje('success', '¡Solicitud enviada! Redirigiendo...');
      
      // Enviar email en background
      const enviarEmail = async (): Promise<void> => {
        try {
          const formData = new FormData();
          formData.append('Nombre_Completo', datos.nombre);
          formData.append('Email_Contacto', datos.email);
          formData.append('Teléfono', datos.telefono);
          formData.append('Duración_Solicitada', datos.duracion);
          formData.append('Fecha_de_Ingreso', datos.fecha || 'Por coordinar');
          formData.append('Número_de_Personas', datos.personas);
          formData.append('Conoció_Pixel_por', datos.como_conociste || 'No especificado');
          formData.append('Mensaje_Adicional', datos.mensaje || 'Ninguno');
          formData.append('Fecha_Envío', new Date().toLocaleString('es-CO'));
          formData.append('_subject', `🏠 Nueva Reserva Pixel Living - ${datos.nombre}`);
          formData.append('_template', 'table');
          formData.append('_captcha', 'false');
          formData.append('_next', 'https://pixelliving.co/gracias');
          
const response = await fetch('https://formsubmit.co/comercialpixel98a@gmail.com', {
            method: 'POST',
            body: formData
          });
          
          console.log(response.ok ? '✅ Email enviado' : '⚠️ Error en email');
        } catch (error) {
          console.error('⚠️ Error enviando email:', error);
        }
      };
      
      enviarEmail();
      
      // Redirigir a página de agradecimiento
      setTimeout(() => {
        window.location.href = '/gracias';
      }, 2000);
      
    } catch (error) {
      console.error('❌ Error:', error);
      mostrarMensaje('error', 'Error al enviar. Intenta nuevamente o usa WhatsApp directo.');
      
      // En caso de error, crear mensaje de emergencia con datos disponibles
      let emergencyMsg = 'Solicitud Pixel Living - Error en formulario web.';
      
      // Intentar obtener datos básicos si están disponibles
      const nombreEl = form.querySelector('#nombre') as HTMLInputElement | null;
      const emailEl = form.querySelector('#email') as HTMLInputElement | null;
      const telefonoEl = form.querySelector('#telefono') as HTMLInputElement | null;
      
      if (nombreEl?.value || emailEl?.value || telefonoEl?.value) {
        emergencyMsg += ` Datos: ${nombreEl?.value || 'N/A'}, ${emailEl?.value || 'N/A'}, ${telefonoEl?.value || 'N/A'}`;
      }
      
      window.open(`https://wa.me/573195895858?text=${encodeURIComponent(emergencyMsg)}`, '_blank');
    } finally {
      if (boton) {
        boton.textContent = textoOriginal;
        boton.disabled = false;
      }
    }
  });
  
  console.log('✅ Formulario de reservas optimizado configurado');
});
</script>