---
---

<section id="reservas" class="section bg-pixel-brown/10">
    <div class="container">
      <h2 class="section-title text-4xl text-pixel-brown">¬øListo para vivir en Pixel?</h2>
      
      <div class="max-w-6xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="md:flex">
          <div class="md:w-1/2 p-8">
            <h3 class="text-2xl font-bold mb-6">Solicita tu espacio</h3>
            
            <!-- Contenedor para mensajes din√°micos -->
            <div id="message-container" class="hidden mb-4"></div>
            
<form id="reservaForm" class="space-y-4" data-bypass-intercept="true">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label for="nombre" class="block text-sm font-medium text-gray-700 mb-1">
                    Nombre completo *
                  </label>
                  <input 
                    type="text" 
                    id="nombre" 
                    name="nombre" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="Ej: Mar√≠a Garc√≠a"
                    autocomplete="name"
                    required
                  >
                  <div id="nombre-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
                    Correo electr√≥nico *
                  </label>
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="Ej: maria@gmail.com"
                    autocomplete="email"
                    required
                  >
                  <div id="email-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label for="telefono" class="block text-sm font-medium text-gray-700 mb-1">
                    Tel√©fono *
                  </label>
                  <input 
                    type="tel" 
                    id="telefono" 
                    name="telefono" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    placeholder="Ej: 3001234567"
                    autocomplete="tel"
                    required
                  >
                  <div id="telefono-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="fecha" class="block text-sm font-medium text-gray-700 mb-1">Fecha de ingreso estimada</label>
                  <input 
                    type="date" 
                    id="fecha" 
                    name="fecha" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                  <div id="fecha-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label for="apartamento" class="block text-sm font-medium text-gray-700 mb-1">Tipo de apartamento</label>
                  <select 
                    id="apartamento" 
                    name="apartamento" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                    <option value="">Selecciona un apartamento</option>
                    <option value="Estudio √çndigo">üîµ Estudio √çndigo</option>
                    <option value="Estudio Jade">üü¢ Estudio Jade</option>
                    <option value="Estudio Zian">üü° Estudio Zian</option>
                    <option value="Cualquier disponible">‚ú® Cualquier disponible</option>
                  </select>
                  <div id="apartamento-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <label for="estadia" class="block text-sm font-medium text-gray-700 mb-1">Tiempo estimado de estad√≠a</label>
                  <select 
                    id="estadia" 
                    name="estadia" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                    <option value="">Selecciona una opci√≥n</option>
                    <option value="1-3 meses">1-3 meses</option>
                    <option value="3-6 meses">3-6 meses</option>
                    <option value="6-12 meses">6-12 meses</option>
                    <option value="M√°s de 1 a√±o">M√°s de 1 a√±o</option>
                  </select>
                  <div id="estadia-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label for="personas" class="block text-sm font-medium text-gray-700 mb-1">N√∫mero de personas</label>
                  <select 
                    id="personas" 
                    name="personas" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                    required
                  >
                    <option value="1">1 persona</option>
                    <option value="2">2 personas</option>
                  </select>
                  <div id="personas-error" class="hidden text-red-600 text-sm mt-1"></div>
                </div>
                
                <div>
                  <!-- Espacio para mantener el grid -->
                </div>
              </div>
              
              <div>
                <label for="expectativas" class="block text-sm font-medium text-gray-700 mb-1">¬øQu√© buscas en tu experiencia en Pixel? *</label>
                <textarea 
                  id="expectativas" 
                  name="expectativas" 
                  rows="3" 
                  class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-pixel-brown focus:border-transparent bg-white" 
                  placeholder="Cu√©ntanos qu√© te motiva a elegir Pixel Living..."
                  required
                ></textarea>
                <div id="contador-caracteres" class="mt-1 text-xs text-gray-500">0/500 caracteres</div>
                <div id="expectativas-error" class="hidden text-red-600 text-sm mt-1"></div>
              </div>
              
              <button type="submit" class="w-full btn bg-pixel-brown hover:bg-brown-600 text-white py-3 px-6 rounded-md font-medium transition-colors">
                üëâ Solicita tu espacio ahora
              </button>
            </form>
            
            <div class="mt-4 text-center">
              <p class="text-sm text-gray-500">O si prefieres, cont√°ctanos directamente:</p>
              <a href="https://wa.me/573017872595" target="_blank" class="inline-flex items-center text-pixel-brown mt-2 font-medium hover:underline">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-5 h-5 mr-2" viewBox="0 0 16 16">
                  <path d="M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z"/>
                </svg>
                WhatsApp
              </a>
            </div>
          </div>
          
          <div class="md:w-1/2 bg-pixel-brown/20 p-8 flex flex-col justify-center">
            <div class="text-center">
              <h3 class="text-2xl font-bold mb-4">¬øPor qu√© reservar ahora?</h3>
              
              <ul class="space-y-4 text-left">
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span>Sin complicadas firmas de contrato</span>
                </li>
                
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span>Todos los servicios incluidos en un solo pago</span>
                </li>
                
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span>Mudanza inmediata: apartaestudios listos para habitar</span>
                </li>
                
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span>Flexibilidad para estad√≠as medianas y largas</span>
                </li>
                
                <li class="flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-pixel-brown mr-2 flex-shrink-0">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  <span>Comunidad de personas creativas y emprendedoras</span>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('üöÄ Inicializando formulario de reservas avanzado...');
  
  // Elementos del formulario
  const form = document.getElementById('reservaForm') as HTMLFormElement;
  const messageContainer = document.getElementById('message-container') as HTMLElement;
  const contadorCaracteres = document.getElementById('contador-caracteres') as HTMLElement;
  const expectativasField = document.getElementById('expectativas') as HTMLTextAreaElement;
  
  // Verificar que los elementos existen
  if (!form || !messageContainer) {
    console.error('‚ùå Elementos del formulario no encontrados');
    return;
  }
  
  // Campos que requieren validaci√≥n
  const campos = form.querySelectorAll('input[required], select[required], textarea[required]') as NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>;
  
  // ===== FUNCIONES DE UTILIDAD =====
  
  function mostrarMensaje(tipo: 'success' | 'error' | 'loading', mensaje: string) {
    let iconoHTML = '';
    let claseColor = '';
    
    switch (tipo) {
      case 'success':
        iconoHTML = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>`;
        claseColor = 'bg-green-50 text-green-800 border-green-200';
        break;
      case 'error':
        iconoHTML = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
        </svg>`;
        claseColor = 'bg-red-50 text-red-800 border-red-200';
        break;
      case 'loading':
        iconoHTML = `<svg class="animate-spin h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>`;
        claseColor = 'bg-blue-50 text-blue-800 border-blue-200';
        break;
    }
    
    messageContainer.innerHTML = `
      <div class="flex items-center gap-3 p-4 rounded-lg border ${claseColor}">
        ${iconoHTML}
        <span>${mensaje}</span>
      </div>
    `;
    
    messageContainer.classList.remove('hidden');
    
    if (tipo === 'success') {
    setTimeout(() => {
      messageContainer.classList.add('hidden');
    }, 1500); // Solo 1.5 segundos
  }
}
  
  // ===== FUNCIONES DE VALIDACI√ìN =====
  
  function validarNombre(valor: string): string | null {
    const nombre = valor.trim();
    if (nombre.length < 2) return 'El nombre debe tener al menos 2 caracteres';
    if (nombre.length > 50) return 'El nombre no puede exceder 50 caracteres';
    if (!/^[a-zA-Z√°√©√≠√≥√∫√Å√â√ç√ì√ö√±√ë\s]+$/.test(nombre)) return 'Solo se permiten letras y espacios';
    return null;
  }
  
  function validarEmail(valor: string): string | null {
    const email = valor.trim();
    if (!email) return 'El email es obligatorio';
    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) return 'Email inv√°lido';
    return null;
  }
  
  function validarTelefono(valor: string): string | null {
    const telefono = valor.trim();
    if (!telefono) return 'El tel√©fono es obligatorio';
    if (!/^[0-9+\-\s()]+$/.test(telefono)) return 'Solo n√∫meros y caracteres de tel√©fono';
    if (telefono.replace(/\D/g, '').length < 7) return 'M√≠nimo 7 d√≠gitos';
    return null;
  }
  
  function validarFecha(valor: string): string | null {
    if (!valor) return null; // Opcional
    const fecha = new Date(valor);
    const hoy = new Date();
    hoy.setHours(0, 0, 0, 0);
    if (fecha < hoy) return 'La fecha no puede ser en el pasado';
    return null;
  }
  
  function validarSelect(valor: string, campoNombre: string): string | null {
    if (!valor) return `Por favor selecciona ${campoNombre}`;
    return null;
  }
  
  function validarTextarea(valor: string): string | null {
    const texto = valor.trim();
    if (!texto) return 'Este campo es obligatorio';
    if (texto.length < 10) return 'M√≠nimo 10 caracteres';
    if (texto.length > 500) return 'M√°ximo 500 caracteres';
    return null;
  }
  
  // ===== MOSTRAR/LIMPIAR ERRORES =====
  
  function mostrarError(campo: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement, mensaje: string) {
    campo.classList.add('border-red-500');
    campo.classList.remove('border-gray-300');
    
    const errorDiv = document.getElementById(`${campo.id}-error`);
    if (errorDiv) {
      errorDiv.textContent = mensaje;
      errorDiv.classList.remove('hidden');
    }
  }
  
  function limpiarError(campo: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {
    campo.classList.remove('border-red-500');
    campo.classList.add('border-gray-300');
    
    const errorDiv = document.getElementById(`${campo.id}-error`);
    if (errorDiv) {
      errorDiv.textContent = '';
      errorDiv.classList.add('hidden');
    }
  }
  
  // ===== VALIDAR CAMPO =====
  
  function validarCampo(campo: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean {
    let error: string | null = null;
    
    switch (campo.id) {
      case 'nombre':
        error = validarNombre(campo.value);
        break;
      case 'email':
        error = validarEmail(campo.value);
        break;
      case 'telefono':
        error = validarTelefono(campo.value);
        break;
      case 'fecha':
        error = validarFecha(campo.value);
        break;
      case 'apartamento':
        error = validarSelect(campo.value, 'un apartamento');
        break;
      case 'estadia':
        error = validarSelect(campo.value, 'el tiempo de estad√≠a');
        break;
      case 'personas':
        error = validarSelect(campo.value, 'n√∫mero de personas');
        break;
      case 'expectativas':
        error = validarTextarea(campo.value);
        break;
    }
    
    if (error) {
      mostrarError(campo, error);
      return false;
    } else {
      limpiarError(campo);
      return true;
    }
  }
  
  // ===== CONFIGURAR EVENTOS DE VALIDACI√ìN =====
  
  campos.forEach(campo => {
    // Validar al perder el foco
    campo.addEventListener('blur', () => {
      validarCampo(campo);
    });
    
    // Limpiar error mientras escribe
    campo.addEventListener('input', () => {
      if (campo.classList.contains('border-red-500')) {
        limpiarError(campo);
      }
    });
  });
  
  // ===== CONTADOR DE CARACTERES =====
  
  if (expectativasField && contadorCaracteres) {
    expectativasField.addEventListener('input', () => {
      const currentLength = expectativasField.value.length;
      const maxLength = 500;
      
      contadorCaracteres.textContent = `${currentLength}/${maxLength} caracteres`;
      
      if (currentLength > maxLength * 0.9) {
        contadorCaracteres.classList.add('text-yellow-600');
        contadorCaracteres.classList.remove('text-gray-500');
      } else if (currentLength > maxLength) {
        contadorCaracteres.classList.add('text-red-600');
        contadorCaracteres.classList.remove('text-yellow-600', 'text-gray-500');
      } else {
        contadorCaracteres.classList.add('text-gray-500');
        contadorCaracteres.classList.remove('text-yellow-600', 'text-red-600');
      }
    });
  }
  
  // ===== ENV√çO DEL FORMULARIO =====
  
  form.addEventListener('submit', async function(e) {
  e.preventDefault();
  
  // IMPORTANTE: Detener propagaci√≥n para evitar que pixel-form-unified interfiera
  e.stopImmediatePropagation();
  
  // Ocultar mensajes anteriores
  if (messageContainer) {
    messageContainer.classList.add('hidden');
  }
  
  // Validar todos los campos
  let todoValido = true;
  let primerError: HTMLElement | null = null;
  
  campos.forEach(campo => {
    if (!validarCampo(campo)) {
      todoValido = false;
      if (!primerError) {
        primerError = campo as HTMLElement;
      }
    }
  });
  
  if (!todoValido) {
    mostrarMensaje('error', 'Por favor corrige los errores se√±alados');
    if (primerError) {
      (primerError as HTMLElement).focus();
      (primerError as HTMLElement).scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
    return;
  }
  
  // Configurar bot√≥n y estado de carga
  const boton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
  if (!boton) {
    console.error('‚ùå Bot√≥n de env√≠o no encontrado');
    return;
  }
  
  const textoOriginal = boton.textContent || '';
  
  try {
    boton.textContent = 'Enviando...';
    boton.disabled = true;
    mostrarMensaje('loading', 'Procesando tu solicitud...');
    
    // Recopilar datos del formulario
    const nombreEl = form.querySelector('#nombre') as HTMLInputElement;
    const emailEl = form.querySelector('#email') as HTMLInputElement;
    const telefonoEl = form.querySelector('#telefono') as HTMLInputElement;
    const fechaEl = form.querySelector('#fecha') as HTMLInputElement;
    const apartamentoEl = form.querySelector('#apartamento') as HTMLSelectElement;
    const estadiaEl = form.querySelector('#estadia') as HTMLSelectElement;
    const personasEl = form.querySelector('#personas') as HTMLSelectElement;
    const expectativasEl = form.querySelector('#expectativas') as HTMLTextAreaElement;
    
    const datos = {
      nombre: nombreEl.value.trim(),
      email: emailEl.value.trim(),
      telefono: telefonoEl.value.trim(),
      fecha: fechaEl.value,
      apartamento: apartamentoEl.value,
      estadia: estadiaEl.value,
      personas: personasEl.value,
      expectativas: expectativasEl.value.trim()
    };
    
    console.log('üìã Datos del formulario:', datos);
    
    // 1. CREAR MENSAJE WHATSAPP PRIMERO
    const mensajeWhatsApp = `üè† *SOLICITUD RESERVA PIXEL LIVING*

üë§ *DATOS PERSONALES:*
- Nombre: ${datos.nombre}
- Email: ${datos.email}
- Tel√©fono: ${datos.telefono}

üè¢ *APARTAMENTO SOLICITADO:*
${datos.apartamento}

üìÖ *DETALLES DE LA ESTAD√çA:*
- Fecha ingreso: ${datos.fecha || 'Por coordinar'}
- Duraci√≥n: ${datos.estadia || 'Por definir'}
- Personas: ${datos.personas || '1'}

üí¨ *EXPECTATIVAS:*
${datos.expectativas}

---
üìß Copia enviada por email
‚è∞ ${new Date().toLocaleString('es-CO')}
üåê pixelliving.co`;
    
    // 2. ABRIR WHATSAPP INMEDIATAMENTE (sin delay)
    const whatsappURL = `https://wa.me/573017872595?text=${encodeURIComponent(mensajeWhatsApp)}`;
    window.open(whatsappURL, '_blank');
    console.log('‚úÖ WhatsApp abierto');
    
    // 3. MOSTRAR √âXITO
    mostrarMensaje('success', '¬°Solicitud enviada! Redirigiendo a WhatsApp...');
    
    // 4. ENVIAR EMAIL EN BACKGROUND (sin bloquear)
    const enviarEmail = async () => {
      try {
        const formData = new FormData();
        formData.append('Nombre', datos.nombre);
        formData.append('Email', datos.email);
        formData.append('Tel√©fono', datos.telefono);
        formData.append('Apartamento_Solicitado', datos.apartamento);
        formData.append('Fecha_de_Ingreso', datos.fecha || 'Por coordinar');
        formData.append('Duraci√≥n_Estad√≠a', datos.estadia || 'Por definir');
        formData.append('N√∫mero_de_Personas', datos.personas || '1');
        formData.append('Expectativas_y_Mensaje', datos.expectativas);
        formData.append('_subject', `üè¢ Nueva Reserva: ${datos.apartamento} - ${datos.nombre}`);
        formData.append('_template', 'table');
        formData.append('_captcha', 'false');
        
        const response = await fetch('https://formsubmit.co/mbedoyarudas@gmail.com', {
          method: 'POST',
          body: formData
        });
        
        console.log(response.ok ? '‚úÖ Email enviado' : '‚ö†Ô∏è Error en email');
      } catch (error) {
        console.error('‚ö†Ô∏è Error enviando email:', error);
      }
    };
    
    // Enviar email sin esperar respuesta
    enviarEmail();
    
    // 5. RESETEAR FORMULARIO R√ÅPIDO
    setTimeout(() => {
      if (form) {
        form.reset();
      }
      
      campos.forEach(campo => {
        limpiarError(campo);
      });
      
      if (contadorCaracteres) {
        contadorCaracteres.textContent = '0/500 caracteres';
        contadorCaracteres.className = 'mt-1 text-xs text-gray-500';
      }
      
      console.log('‚úÖ Proceso completado');
    }, 300); // Solo 300ms
    
  } catch (error) {
    console.error('‚ùå Error:', error);
    mostrarMensaje('error', 'Error al enviar. Intenta nuevamente.');
    
    // En caso de error, abrir WhatsApp de todas formas
    const emergencyMsg = `Solicitud de reserva - Error en formulario web. Por favor revisar formulario.`;
    window.open(`https://wa.me/573017872595?text=${encodeURIComponent(emergencyMsg)}`, '_blank');
  } finally {
    if (boton) {
      boton.textContent = textoOriginal;
      boton.disabled = false;
    }
  }
});
  
  console.log('‚úÖ Formulario de reservas configurado correctamente');
});
</script>