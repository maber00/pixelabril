---
// Hero.astro OPTIMIZADO con messaging de alta conversión y responsive mobile
import heroImage1 from '../assets/pixel-frontal-002.webp';
import heroImage2 from '../assets/pixel-room-01.webp';
import heroImage3 from '../assets/fachada001.webp';
import heroImage4 from '../assets/pixel-terraza-hero-2.webp';
import heroImage5 from '../assets/pixel-room-02.jpg';

// AÑADIR SOLO ESTO:
import { getLanguageFromUrl, t, setCurrentLanguage } from '../i18n/utils/translator';
const currentLang = getLanguageFromUrl(Astro.url.pathname);
setCurrentLanguage(currentLang);

// Beneficios según idioma (SIN JSON.parse):
const benefits = currentLang === 'es' 
  ? ['✓ Sin codeudor', '✓ Desde 1 mes', '✓ Todo incluido', '✓ Listo para habitar']
  : ['✓ No guarantor required', '✓ From 1 month', '✓ All-inclusive', '✓ Move-in ready'];

  // Alt texts para imágenes
const altTexts = currentLang === 'es' ? [
  "Pixel Living - Coliving moderno en Bogotá",
  "Apartaestudios amoblados 29m² en el norte de Bogotá", 
  "Coliving sin codeudor en Zona Rosa Bogotá",
  "Terraza Pixel Living - Espacios compartidos",
  "Habitaciones completamente equipadas Pixel Living"
] : [
  "Pixel Living - Modern coliving in Bogotá",
  "29m² furnished studios in north Bogotá",
  "No guarantor coliving in Zona Rosa Bogotá", 
  "Pixel Living rooftop - Shared spaces",
  "Fully equipped Pixel Living rooms"
];
---

<section class="relative min-h-screen flex items-center overflow-hidden w-full" id="hero-section">
  <!-- Carousel de fondo -->
  <div class="absolute inset-0 z-0">
    <!-- Imágenes del carousel -->
    <div class="carousel-container">
      <div class="carousel-slide active">
        <div class="zoom-wrapper">
          <img
            src={heroImage1.src}
            alt={altTexts[0]}
            class="zoom-image zoom-image-1"
          />
        </div>
      </div>
      <div class="carousel-slide">
        <div class="zoom-wrapper">
          <img
            src={heroImage2.src}
            alt={altTexts[1]}
            class="zoom-image zoom-image-2"
          />
        </div>
      </div>
      <div class="carousel-slide">
        <div class="zoom-wrapper">
          <img
            src={heroImage3.src}
            alt={altTexts[2]}
            class="zoom-image zoom-image-3"
          />
        </div>
      </div>
      <div class="carousel-slide">
        <div class="zoom-wrapper">
          <img
            src={heroImage4.src}
            alt={altTexts[3]}
            class="zoom-image zoom-image-4"
          />
        </div>
      </div>
      <div class="carousel-slide">
        <div class="zoom-wrapper">
          <img
            src={heroImage5.src}
            alt={altTexts[4]}
            class="zoom-image zoom-image-5"
          />
        </div>
      </div>
    </div>
    
    <div class="absolute inset-0 bg-gradient-to-r from-black/70 to-black/40 z-10"></div>
  </div>
  
  <div class="container relative z-20 mt-32 mb-32 md:py-0">
    <div class="flex flex-col items-start text-left max-w-4xl">
      
      <h1 class="text-sm md:text-3xl font-normal leading-tight mb-1 text-white cal-display hero-title">
      <span class="text-pixel-orange text-xl md:text-4xl">{t('hero.brand_line_1')}</span> 
      <span class="text-xs md:text-xl opacity-60">|</span> 
      <span class="text-pixel-yellow text-xl md:text-4xl">{t('hero.brand_line_2')}</span>
      </h1>

      <h2 class="text-5xl md:text-6xl text-white mb-6 font-normal">
        <span class="block">{t('hero.title')}</span>
        <span class="block text-2xl md:text-5xl text-pixel-yellow mt-1">{t('hero.subtitle')}</span>
      </h2>
      
      <!-- Descripción principal -->
      <p class="text-lg md:text-xl text-white mb-6 max-w-2xl leading-relaxed">
        {t('hero.description')}
      </p>


      <div class="flex flex-wrap gap-2 mb-6">
        {benefits.map((benefit, index) => {
  const colors = ['bg-pixel-yellow text-gray-900', 'bg-pixel-yellow text-gray-900', 'bg-pixel-yellow text-gray-900', 'bg-pixel-yellow text-gray-900'];
  return (
    <span class={`${colors[index]} px-3 py-1 rounded-full text-sm font-medium`}>
      {benefit}
    </span>
  );
})}
      </div>
      
      

  

      <p class="hidden md:block text-lg text-pixel-yellow mb-8 font-medium">
  {t('hero.cta_question')}
</p>
      
      <div class="flex flex-col sm:flex-row gap-4">
        <a href="#reservas" class="hidden md:flex btn bg-pixel-yellow hover:bg-yellow-500 text-gray-900 text-lg font-semibold px-8 py-4 rounded-lg items-center justify-center">
  {t('hero.button_primary')}
  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 ml-2">
    <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
  </svg>
</a>

<a href="#espacios" class="btn bg-transparent border-2 border-white text-white hover:bg-white hover:text-gray-900 px-6 py-4 rounded-lg">
  {t('hero.button_secondary')}
</a>
      </div>

      <p class="text-sm text-gray-300 mt-4">
  {t('hero.trust_info')}
</p>
<p class="text-xs text-gray-400 mt-2">
  {t('hero.process_time')}
</p>
    </div>
  </div>
  
  
  
  <div class="absolute md:bottom-8 invisible md:visible md:left-1/2 transform -translate-x-1/2 text-white z-30">
    <a href="#vive-pixel" class="flex flex-col mt-30 items-center group">
  <span class="mb-2 text-sm font-medium group-hover:text-pixel-yellow transition-colors">
    {currentLang === 'es' ? 'Descubre por qué somos diferentes' : 'Discover why we are different'}
  </span>
  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 animate-bounce">
        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
      </svg>
    </a>
  </div>
</section>

<script is:inline>
(function() {
  'use strict';
  
  function initHeroCarousel() {
    
    var slides = document.querySelectorAll('.carousel-slide');
    var heroSection = document.getElementById('hero-section');
    
    if (!slides.length) {
      return;
    }
    
    var currentSlide = 0;
    var totalSlides = slides.length;
    var isPlaying = true;
    var intervalId = null;
    var SLIDE_DURATION = 3000; 
    
    function nextSlide() {
      if (!isPlaying) return;
      
      slides[currentSlide].classList.remove('active');
      
      currentSlide = (currentSlide + 1) % totalSlides;
      
      slides[currentSlide].classList.add('active');
      
    }
    
    function startAutoplay() {
      if (intervalId) clearInterval(intervalId);
      intervalId = setInterval(nextSlide, SLIDE_DURATION);
    }
    
    function stopAutoplay() {
      if (intervalId) {
        clearInterval(intervalId);
        intervalId = null;
      }
    }
    
    if (heroSection) {
      heroSection.addEventListener('mouseenter', function() {
        isPlaying = false;
        stopAutoplay();
      });
      
      heroSection.addEventListener('mouseleave', function() {
        isPlaying = true;
        startAutoplay();
      });
    }
    
  
    for (var i = 0; i < slides.length; i++) {
      slides[i].classList.remove('active');
    }
    
    slides[0].classList.add('active');
    
    startAutoplay();
    
    
    window.heroCarousel = {
      next: nextSlide,
      play: function() { isPlaying = true; startAutoplay(); },
      pause: function() { isPlaying = false; stopAutoplay(); },
      current: function() { return currentSlide + 1; }
    };
  }
  
  // Ejecutar
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initHeroCarousel);
  } else {
    initHeroCarousel();
  }
})();
</script>

<style>
  .carousel-container {
    position: relative;
    width: 150%;
    height: 150vh;
    overflow: hidden;
  }
  
  @media (min-width: 1024px) {
    .carousel-container {
      width: 125%;
      height: 125vh;
    }
  }
  
  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 1.2s ease-in-out;
    z-index: 0;
  }
  
  .carousel-slide.active {
    opacity: 1;
    z-index: 1;
  }
  
  .zoom-wrapper {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;
  }
  
  .zoom-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
  }
  
  /* Animaciones de zoom para cada imagen */
  .zoom-image-1 { animation: zoomEffect1 8s ease-in-out infinite alternate; }
  .zoom-image-2 { animation: zoomEffect2 10s ease-in-out infinite alternate; }
  .zoom-image-3 { animation: zoomEffect3 7s ease-in-out infinite alternate; }
  .zoom-image-4 { animation: zoomEffect4 9s ease-in-out infinite alternate; }
  .zoom-image-5 { animation: zoomEffect5 6s ease-in-out infinite alternate; }
  
  @keyframes zoomEffect1 {
    0% { transform: scale(1) translate(0, 0); }
    100% { transform: scale(1.1) translate(1%, 1%); }
  }
  
  @keyframes zoomEffect2 {
    0% { transform: scale(1) translate(1%, 0); }
    100% { transform: scale(1.1) translate(-1%, 1%); }
  }
  
  @keyframes zoomEffect3 {
    0% { transform: scale(1) translate(-1%, 1%); }
    100% { transform: scale(1.1) translate(1%, -1%); }
  }
  
  @keyframes zoomEffect4 {
    0% { transform: scale(1) translate(0, -1%); }
    100% { transform: scale(1.1) translate(-1%, 0); }
  }
  
  @keyframes zoomEffect5 {
    0% { transform: scale(1) translate(1%, 1%); }
    100% { transform: scale(1.1) translate(0, -1%); }
  }
  
  /* ❌ ELIMINAR TODOS LOS ESTILOS DE DOTS */
  /* 
  .carousel-indicators { ... }  - ELIMINAR
  .carousel-dot { ... }          - ELIMINAR
  .carousel-dot::before { ... }  - ELIMINAR
  .carousel-dot:hover { ... }    - ELIMINAR
  .carousel-dot.active { ... }   - ELIMINAR
  */
  
  /* Responsive optimizado */
  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
      line-height: 1.1;
    }
  }
  
  /* Mejoras de accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .carousel-slide { transition: opacity 0.5s ease-in-out; }
    .zoom-image { animation: none !important; }
  }
  
  /* Focus states mejorados */
  .btn:focus {
    outline: 3px solid #ffd700;
    outline-offset: 2px;
  }
</style>