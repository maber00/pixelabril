---
// Hero.astro con Carousel y Zoom Animado - JavaScript Vanilla
import heroImage1 from '../assets/pixel-frontal-002.webp';
import heroImage2 from '../assets/pixel-room-01.webp';
import heroImage3 from '../assets/pixel-recepcion.webp';
import heroImage4 from '../assets/pixel-terraza-hero-2.webp';
import heroImage5 from '../assets/pixel-room-02.jpg';
---

<section class="relative min-h-screen flex items-center overflow-hidden w-full" id="hero-section">
  <!-- Carousel de fondo -->
  <div class="absolute inset-0 z-0">
    <!-- Im√°genes del carousel -->
    <div class="carousel-container">
      <div class="carousel-slide active">
        <div class="zoom-wrapper">
          <img
            src={heroImage1.src}
            alt="Pixel Living - Coliving moderno en Bogot√°"
            class="zoom-image zoom-image-1"
          />
        </div>
      </div>
      <div class="carousel-slide">
        <div class="zoom-wrapper">
          <img
            src={heroImage2.src}
            alt="Pixel Living - Espacios dise√±ados para crear"
            class="zoom-image zoom-image-2"
          />
        </div>
      </div>
      <div class="carousel-slide">
        <div class="zoom-wrapper">
          <img
            src={heroImage3.src}
            alt="Pixel Living - Comunidad y comodidad"
            class="zoom-image zoom-image-3"
          />
        </div>
      </div>
      <div class="carousel-slide">
        <div class="zoom-wrapper">
          <img
            src={heroImage4.src}
            alt="Pixel Living - Espacios √∫nicos"
            class="zoom-image zoom-image-4"
          />
        </div>
      </div>
      <div class="carousel-slide">
        <div class="zoom-wrapper">
          <img
            src={heroImage5.src}
            alt="Pixel Living - Experiencia completa"
            class="zoom-image zoom-image-5"
          />
        </div>
      </div>
    </div>
    
    <!-- Overlay gradiente -->
    <div class="absolute inset-0 bg-gradient-to-r from-black/70 to-black/40 z-10"></div>
  </div>
  
  <!-- Contenido principal -->
  <div class="container relative z-20 pt-32 pb-16 md:py-0">
    <div class="flex flex-col items-start text-left max-w-3xl">
      <h1 class="text-5xl md:text-6xl font-bold leading-tight mb-6 text-white cal-display hero-title">
        Vivir <span class="text-pixel-yellow">diferente.</span> <br/>
        <span class="text-pixel-orange">Conectar.</span> <span class="text-white">Crear.</span>
      </h1>
      
      <p class="text-xl md:text-2xl text-gray-200 mb-10 max-w-2xl hero-description">
        Pixel Living es coliving en Bogot√° para quienes buscan algo m√°s que un arriendo.
        Apartaestudios dise√±ados para estad√≠as medianas y largas, con estilo, comodidad y comunidad.
      </p>
      
      <a href="https://wa.me/573017872595" target="_blank" class="btn btn-primary text-lg flex items-center hero-cta">
        üëâ Quiero vivir en Pixel
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 ml-2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
        </svg>
      </a>
    </div>
  </div>
  
  <!-- Indicadores del carousel -->
  <div class="absolute bottom-20 invisible md:visible mb-5 left-1/2 transform -translate-x-1/2 z-30">
    <div class="flex space-x-3 carousel-indicators">
      <button class="carousel-dot active" data-slide="0" aria-label="Imagen 1"></button>
      <button class="carousel-dot" data-slide="1" aria-label="Imagen 2"></button>
      <button class="carousel-dot" data-slide="2" aria-label="Imagen 3"></button>
      <button class="carousel-dot" data-slide="3" aria-label="Imagen 4"></button>
      <button class="carousel-dot" data-slide="4" aria-label="Imagen 5"></button>
    </div>
  </div>
  
  <!-- Indicador de scroll -->
  <div class="absolute md:bottom-8 invisible md:visible md:left-1/2 0 transform -translate-x-1/2 text-white z-30">
    <a href="#vive-pixel" class="flex flex-col mt-30 items-center">
      <span class="mb-2 text-sm font-medium">Descubre m√°s</span>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
      </svg>
    </a>
  </div>
</section>

<!-- ASEG√öRATE DE QUE ESTOS ESTILOS EST√âN EN LA SECCI√ìN <style> DE Hero.astro -->

<style>
  /* ===== CONTENEDOR DEL CARRUSEL ===== */
  .carousel-container {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
  }
  
  /* ===== SLIDES CON EFECTO FADE ===== */
  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 1s ease-in-out; /* Transici√≥n suave de 1 segundo */
    z-index: 0;
  }
  
  /* Slide activo visible */
  .carousel-slide.active {
    opacity: 1;
    z-index: 1;
  }
  
  /* ===== WRAPPER PARA ZOOM ===== */
  .zoom-wrapper {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;
  }
  
  /* ===== IM√ÅGENES CON EFECTO ZOOM ===== */
  .zoom-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
  }
  
  /* Animaciones de zoom para cada imagen */
  .zoom-image-1 {
    animation: zoomEffect1 8s ease-in-out infinite alternate;
  }
  
  .zoom-image-2 {
    animation: zoomEffect2 10s ease-in-out infinite alternate;
  }
  
  .zoom-image-3 {
    animation: zoomEffect3 7s ease-in-out infinite alternate;
  }
  
  .zoom-image-4 {
    animation: zoomEffect4 9s ease-in-out infinite alternate;
  }
  
  .zoom-image-5 {
    animation: zoomEffect5 6s ease-in-out infinite alternate;
  }
  
  /* ===== KEYFRAMES PARA ZOOM ===== */
  @keyframes zoomEffect1 {
    0% {
      transform: scale(1) translate(0, 0);
    }
    100% {
      transform: scale(1.1) translate(1%, 1%);
    }
  }
  
  @keyframes zoomEffect2 {
    0% {
      transform: scale(1) translate(1%, 0);
    }
    100% {
      transform: scale(1.1) translate(-1%, 1%);
    }
  }
  
  @keyframes zoomEffect3 {
    0% {
      transform: scale(1) translate(-1%, 1%);
    }
    100% {
      transform: scale(1.1) translate(1%, -1%);
    }
  }
  
  @keyframes zoomEffect4 {
    0% {
      transform: scale(1) translate(0, -1%);
    }
    100% {
      transform: scale(1.1) translate(-1%, 0);
    }
  }
  
  @keyframes zoomEffect5 {
    0% {
      transform: scale(1) translate(1%, 1%);
    }
    100% {
      transform: scale(1.1) translate(0, -1%);
    }
  }
  
  /* ===== INDICADORES (DOTS) ===== */
  .carousel-indicators {
    backdrop-filter: blur(10px);
    background: rgba(0, 0, 0, 0.2);
    padding: 12px 20px;
    border-radius: 50px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .carousel-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.4);
    background: transparent;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
  }
  
  /* √Årea clickeable m√°s grande */
  .carousel-dot::before {
    content: '';
    position: absolute;
    top: -8px;
    left: -8px;
    right: -8px;
    bottom: -8px;
  }
  
  .carousel-dot:hover {
    border-color: rgba(255, 255, 255, 0.8);
    transform: scale(1.1);
  }
  
  .carousel-dot.active {
    background: #fbbf24;
    border-color: #fbbf24;
    box-shadow: 0 0 10px rgba(251, 191, 36, 0.5);
  }
  
  /* ===== RESPONSIVE ===== */
  @media (max-width: 768px) {
    .carousel-indicators {
      bottom: 16px;
      padding: 8px 16px;
    }
    
    .carousel-dot {
      width: 10px;
      height: 10px;
    }
    
    /* Zoom m√°s sutil en m√≥vil */
    @keyframes zoomEffect1,
    @keyframes zoomEffect2,
    @keyframes zoomEffect3,
    @keyframes zoomEffect4,
    @keyframes zoomEffect5 {
      0% { transform: scale(1); }
      100% { transform: scale(1.05); }
    }
  }
  
  /* ===== MEJORAS DE RENDIMIENTO ===== */
  .carousel-slide:not(.active) {
    pointer-events: none;
  }
  
  /* Suavizar animaciones en dispositivos lentos */
  @media (prefers-reduced-motion: reduce) {
    .carousel-slide {
      transition: opacity 0.5s ease-in-out;
    }
    
    .zoom-image {
      animation: none !important;
    }
  }
</style>

<!-- REEMPLAZA TODO EL SCRIPT EN Hero.astro CON ESTE C√ìDIGO NUEVO -->

<script is:inline>
(function() {
  'use strict';
  
  // Esperar a que el DOM est√© listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initCarousel);
  } else {
    initCarousel();
  }
  
  function initCarousel() {
    console.log('üé† Inicializando Hero Carousel...');
    
    // ===== ELEMENTOS =====
    const slides = document.querySelectorAll('.carousel-slide');
    const dots = document.querySelectorAll('.carousel-dot');
    const heroSection = document.getElementById('hero-section');
    
    // Verificar que tengamos elementos
    if (!slides.length || !dots.length) {
      console.error('‚ùå No se encontraron slides o dots');
      return;
    }
    
    // ===== CONFIGURACI√ìN =====
    const CONFIG = {
      duration: 3000,        // 3 segundos por slide
      fadeTime: 1000,        // 1 segundo de transici√≥n fade
      currentSlide: 0,
      totalSlides: slides.length,
      isPlaying: true,
      intervalId: null,
      isTransitioning: false
    };
    
    console.log(`üìä Configuraci√≥n: ${CONFIG.totalSlides} slides, cambio cada ${CONFIG.duration/1000}s`);
    
    // ===== FUNCIONES PRINCIPALES =====
    
    /**
     * Cambiar a un slide espec√≠fico
     */
    function goToSlide(index) {
      // Validar √≠ndice
      if (index < 0 || index >= CONFIG.totalSlides) {
        console.warn('√çndice inv√°lido:', index);
        return;
      }
      
      // Evitar cambios durante transici√≥n
      if (CONFIG.isTransitioning) {
        console.log('‚è≥ Transici√≥n en progreso, esperando...');
        return;
      }
      
      // Si es el mismo slide, no hacer nada
      if (index === CONFIG.currentSlide) {
        console.log('üìç Ya est√°s en este slide');
        return;
      }
      
      console.log(`üîÑ Cambiando de slide ${CONFIG.currentSlide} ‚Üí ${index}`);
      CONFIG.isTransitioning = true;
      
      // Quitar clase active del slide y dot actual
      slides[CONFIG.currentSlide].classList.remove('active');
      dots[CONFIG.currentSlide].classList.remove('active');
      
      // Actualizar √≠ndice
      CONFIG.currentSlide = index;
      
      // Agregar clase active al nuevo slide y dot
      slides[CONFIG.currentSlide].classList.add('active');
      dots[CONFIG.currentSlide].classList.add('active');
      
      // Esperar a que termine la transici√≥n
      setTimeout(() => {
        CONFIG.isTransitioning = false;
      }, CONFIG.fadeTime);
      
      // Reiniciar autoplay si estaba activo
      if (CONFIG.isPlaying) {
        resetAutoplay();
      }
    }
    
    /**
     * Ir al siguiente slide
     */
    function nextSlide() {
      const nextIndex = (CONFIG.currentSlide + 1) % CONFIG.totalSlides;
      goToSlide(nextIndex);
    }
    
    /**
     * Ir al slide anterior
     */
    function prevSlide() {
      const prevIndex = CONFIG.currentSlide === 0 ? CONFIG.totalSlides - 1 : CONFIG.currentSlide - 1;
      goToSlide(prevIndex);
    }
    
    /**
     * Iniciar autoplay
     */
    function startAutoplay() {
      // Limpiar interval existente
      stopAutoplay();
      
      // Crear nuevo interval
      CONFIG.intervalId = setInterval(() => {
        if (CONFIG.isPlaying && !CONFIG.isTransitioning) {
          nextSlide();
        }
      }, CONFIG.duration);
      
      console.log('‚ñ∂Ô∏è Autoplay iniciado');
    }
    
    /**
     * Detener autoplay
     */
    function stopAutoplay() {
      if (CONFIG.intervalId) {
        clearInterval(CONFIG.intervalId);
        CONFIG.intervalId = null;
        console.log('‚è∏Ô∏è Autoplay detenido');
      }
    }
    
    /**
     * Reiniciar autoplay
     */
    function resetAutoplay() {
      stopAutoplay();
      startAutoplay();
    }
    
    // ===== EVENT LISTENERS =====
    
    // Click en dots
    dots.forEach((dot, index) => {
      dot.addEventListener('click', (e) => {
        e.preventDefault();
        console.log(`üîò Dot ${index} clickeado`);
        goToSlide(index);
      });
      
      // Mejorar accesibilidad
      dot.setAttribute('tabindex', '0');
      dot.setAttribute('role', 'button');
      dot.setAttribute('aria-label', `Ir a imagen ${index + 1} de ${CONFIG.totalSlides}`);
      
      // Permitir activaci√≥n con Enter
      dot.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          goToSlide(index);
        }
      });
    });
    
    // Pausar en hover
    if (heroSection) {
      heroSection.addEventListener('mouseenter', () => {
        CONFIG.isPlaying = false;
        console.log('üñ±Ô∏è Mouse enter - Autoplay pausado');
      });
      
      heroSection.addEventListener('mouseleave', () => {
        CONFIG.isPlaying = true;
        console.log('üñ±Ô∏è Mouse leave - Autoplay reanudado');
      });
    }
    
    // Navegaci√≥n con teclado
    document.addEventListener('keydown', (e) => {
      // Solo si el hero est√° visible
      if (!isElementInViewport(heroSection)) return;
      
      switch(e.key) {
        case 'ArrowLeft':
          e.preventDefault();
          prevSlide();
          break;
        case 'ArrowRight':
          e.preventDefault();
          nextSlide();
          break;
      }
    });
    
    // Pausar cuando la p√°gina no est√° visible
    document.addEventListener('visibilitychange', () => {
      if (document.hidden) {
        CONFIG.isPlaying = false;
        stopAutoplay();
        console.log('üëÅÔ∏è P√°gina oculta - Autoplay detenido');
      } else {
        CONFIG.isPlaying = true;
        startAutoplay();
        console.log('üëÅÔ∏è P√°gina visible - Autoplay reanudado');
      }
    });
    
    // Optimizaci√≥n: Pausar si el hero no est√° visible
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          CONFIG.isPlaying = true;
          startAutoplay();
        } else {
          CONFIG.isPlaying = false;
          stopAutoplay();
        }
      });
    }, { threshold: 0.5 });
    
    if (heroSection) {
      observer.observe(heroSection);
    }
    
    // ===== FUNCIONES AUXILIARES =====
    
    function isElementInViewport(el) {
      if (!el) return false;
      const rect = el.getBoundingClientRect();
      return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
        rect.right <= (window.innerWidth || document.documentElement.clientWidth)
      );
    }
    
    // ===== INICIALIZACI√ìN =====
    
    // Asegurar que el primer slide est√© activo
    slides[0].classList.add('active');
    dots[0].classList.add('active');
    
    // Iniciar autoplay
    startAutoplay();
    
    // Log de √©xito
    console.log('‚úÖ Hero Carousel inicializado correctamente');
    
    // ===== API P√öBLICA (para debug) =====
    window.heroCarousel = {
      goToSlide: goToSlide,
      nextSlide: nextSlide,
      prevSlide: prevSlide,
      play: () => { CONFIG.isPlaying = true; startAutoplay(); },
      pause: () => { CONFIG.isPlaying = false; stopAutoplay(); },
      getConfig: () => CONFIG
    };
  }
})();
</script>